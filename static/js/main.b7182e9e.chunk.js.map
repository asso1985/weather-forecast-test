{"version":3,"sources":["utils/index.js","constants/config.js","middleware/api.js","constants/action-types.js","containers/Root.js","store/configureStore.js","index.js","components/Current/index.js","components/Day/index.js","components/Hour/index.js","components/Forecast/index.js","components/DaysForecast/index.js","components/Icon.js","components/Spinner.js","actions/index.js","containers/CitiesPage.js","containers/DayPage.js","containers/Root.prod.js","reducers/geolocation.js","reducers/cities.js","reducers/index.js","store/configureStore.prod.js"],"names":["__webpack_require__","d","__webpack_exports__","findObjIndex","groupBy","makeId","unixToDate","array","attr","value","i","length","arr","prop","newArray","substrDay","substr","indexOf","forEach","item","day","createSubGroup","push","lenght","characterSet","text","charAt","Math","floor","random","generateRandomString","unix","Date","API","DEFAULT_CITY","BASE_URL","API_KEY","UNIT","id","CALL_API","store","next","action","callAPI","endpoint","types","getState","Error","Array","isArray","every","type","actionWith","data","finalAction","Object","assign","_types","_home_travis_build_asso1985_weather_forecast_test_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","requestType","successType","failureType","fullUrl","fetch","then","response","json","ok","Promise","reject","camelizedJson","camelizeKeys","callApi","schema","error","message","GET_CITIES","ADD_CITY","FORECAST_REQUEST","FORECAST_SUCCESS","FORECAST_FAILURE","SEARCH_LOCATION_REQUEST","SEARCH_LOCATION_SUCCESS","SEARCH_LOCATION_FAILURE","GEOLOCATION_REQUEST","GEOLOCATION_SUCCESS","GEOLOCATION_FAILURE","module","exports","require","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","_containers_Root__WEBPACK_IMPORTED_MODULE_2__","_containers_Root__WEBPACK_IMPORTED_MODULE_2___default","_store_configureStore__WEBPACK_IMPORTED_MODULE_4__","configureStore","render","a","createElement","document","getElementById","Current","city","this","props","forecast","mainWeather","weather","main","descWeather","description","hour","format","dt","react_default","className","name","country","components_Icon","icon","dimension","round","temp","tempMin","tempMax","Component","Day","_this$props","dayId","date","min","max","Link","to","concat","width","height","Hour","time","Forecast","map","index","components_Hour","key","hours","printHours","DaysForecast","days","forecastByDays","groupForecastByDay","keys","components_Day","printDays","validIcons","storm","rain","clear","clouds","snow","Icon","toLowerCase","_this$props$dimension","iconName","getIcon","alt","src","process","Spinner","xmlns","viewBox","preserveAspectRatio","cx","cy","fill","clipPath","transform","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","getForecastByCityId","cityId","dispatch","_ref","defineProperty","method","fetchForecastByCityId","searchLocationByLatLon","lat","lon","fetchSearchLocationByLatLon","addCity","payload","getGeolocation","geolocation","navigator","getPosition","resolve","getCurrentPosition","position","catch","err","CitiesPage","getForecastByLocation","_this","list","_this2","coords","latitude","longitude","console","warn","getDefualtCityForecast","cityName","cities","items","filter","selected","currentCity","getCurrentCity","Fragment","components_Spinner","components_Current","components_DaysForecast","mapDispatchToProps","getCities","withRouter","connect","state","DayPage","goBack","history","getCurrentDay","_this3","match","dtTxt","startsWith","params","currentDay","backLink","onClick","components_Forecast","supportsHistory","window","Root","es","BrowserRouter","basename","forceRefresh","Switch","Route","exact","path","component","initialState","isLoading","arguments","undefined","objectSpread","toConsumableArray","parseInt","combineReducers","preloadedState","createStore","rootReducer","applyMiddleware","thunk","api"],"mappings":"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","file":"static/js/main.b7182e9e.chunk.js","sourcesContent":["export const findObjIndex = (array, attr, value) => {\n    for(var i = 0; i < array.length; i += 1) {\n        if(array[i][attr] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nexport const groupBy = (arr, prop) => {\n  const newArray = [];  \n  const substrDay = (d) => { return d.substr(0, d.indexOf(' ')) };\n  const createSubGroup = (day) => {\n        if (! newArray[day] ) {\n          newArray[day] = [];\n        }\n        \n  };\n  arr.forEach( (item, i) => {\n        const day = substrDay(item[prop]);\n        createSubGroup(day); \n        if (i === 0) {\n                newArray[day].push(item);\n        }\n        if (arr[i-1]) {\n                if (day === substrDay(arr[i-1][prop]) || day === substrDay(arr[i][prop])) {\n                        newArray[day].push(item);\n                }\n        }\n  });\n\n  return newArray;\n}\n\nconst generateRandomString = (lenght, characterSet) => {\n  let text = '';\n  for (var i = 0; i < lenght; i++) {\n    text += characterSet.charAt(Math.floor(Math.random() * characterSet.length));\n  }\n  return text;\n};\n\nexport const makeId = (lenght) => {\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  return generateRandomString(lenght, possible);\n};\n\nexport const unixToDate = (unix) => new Date(unix*1000);","export const API = {\n  BASE_URL: \"https://api.openweathermap.org/data/2.5/\",\n  API_KEY: \"68f510957bb4f7d73599ffc5a213bf84\",\n  UNIT: 'metric'\n};\n\nexport const DEFAULT_CITY = {\n  id: 5128581\n}","import { schema } from 'normalizr';\nimport { camelizeKeys } from 'humps';\n\nimport { API } from '../constants/config';\n\nconst callApi = (endpoint) => {\n  const fullUrl = (endpoint.indexOf(API.BASE_URL) === -1) ? API.BASE_URL + endpoint +  '&appid=' + API.API_KEY + '&units=' + API.UNIT+ '' : endpoint;\n\n  return fetch(fullUrl)\n    .then(response =>\n      response.json().then(json => {\n        if (!response.ok) {\n          return Promise.reject(json)\n        }\n\n        const camelizedJson = camelizeKeys(json)\n\n        return Object.assign({},\n          camelizedJson\n        )\n      })\n    )\n}\n\nexport const CALL_API = 'Call API'\n\nexport default store => next => action => {\n  const callAPI = action[CALL_API]\n  if (typeof callAPI === 'undefined') {\n    return next(action)\n  }\n\n  let { endpoint } = callAPI\n  const { types } = callAPI\n\n  if (typeof endpoint === 'function') {\n    endpoint = endpoint(store.getState())\n  }\n\n  if (typeof endpoint !== 'string') {\n    throw new Error('Specify a string endpoint URL.')\n  }\n\n  if (!Array.isArray(types) || types.length !== 3) {\n    throw new Error('Expected an array of three action types.')\n  }\n  if (!types.every(type => typeof type === 'string')) {\n    throw new Error('Expected action types to be strings.')\n  }\n\n  const actionWith = data => {\n    const finalAction = Object.assign({}, action, data)\n    delete finalAction[CALL_API]\n    return finalAction\n  }\n\n  const [ requestType, successType, failureType ] = types\n  next(actionWith({ type: requestType }))\n\n  return callApi(endpoint, schema).then(\n    response => next(actionWith({\n      response,\n      type: successType\n    })),\n    error => next(actionWith({\n      type: failureType,\n      error: error.message || 'Something bad happened'\n    }))\n  )\n}","export const GET_CITIES = 'GET_CITIES';\nexport const ADD_CITY = 'ADD_CITY';\n\nexport const FORECAST_REQUEST = 'FORECAST_REQUEST';\nexport const FORECAST_SUCCESS = 'FORECAST_SUCCESS';\nexport const FORECAST_FAILURE = 'FORECAST_FAILURE';\n\nexport const SEARCH_LOCATION_REQUEST = 'SEARCH_LOCATION_REQUEST';\nexport const SEARCH_LOCATION_SUCCESS = 'SEARCH_LOCATION_SUCCESS';\nexport const SEARCH_LOCATION_FAILURE = 'SEARCH_LOCATION_FAILURE';\n\nexport const GEOLOCATION_REQUEST = 'GEOLOCATION_REQUEST';\nexport const GEOLOCATION_SUCCESS = 'GEOLOCATION_SUCCESS';\nexport const GEOLOCATION_FAILURE = 'GEOLOCATION_FAILURE';","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./Root.prod')\n} else {\n  module.exports = require('./Root.dev')\n}","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./configureStore.prod')\n} else {\n  module.exports = require('./configureStore.dev')\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport Root from './containers/Root';\nimport \"./index.scss\";\nimport configureStore from './store/configureStore';\nconst store = configureStore();\n\nrender(\n  <Root store={store} />,\n  document.getElementById('root')\n);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../';\nimport format from 'date-fns/format';\nimport { unixToDate } from '../../utils/';\nimport './_current.scss';\n\nclass Current extends Component {\n  static propTypes = {\n    city: PropTypes.object.isRequired,\n  }\n\n  render() {\n    const { city } = this.props;\n    const forecast = city.forecast[0];\n    const mainWeather = forecast && forecast.weather[0].main;\n    const descWeather = forecast && forecast.weather[0].description;\n    const hour = format( unixToDate(forecast.dt), 'h A' );\n\n    if (!forecast) {\n      return false;\n    }\n\n    return (\n      <div className=\"c-current flexgrid flexgrid-full flexgrid--column u-text--center u-width-100\">\n        <h1>{city.name} - {city.country}</h1>  \n        <div className=\"a-icon\">\n          <Icon icon={mainWeather} dimension=\"200\"/>\n          </div>\n          <div>\n                <div className=\"t-size--large\">{Math.round(forecast.main.temp)}<sup>°</sup></div>\n                <div className=\"flexgrid flexgrid--full flexgrid--center u-margin-top--s u-text--center t-size--small\">\n                  <div>min {Math.round(forecast.main.tempMin)}°</div>  \n                  <div className=\"u-margin-left--s\">max {Math.round(forecast.main.tempMax)}°</div>    \n                </div>\n                <div className=\"c-current__desc u-margin-top--s t-size--small\">{descWeather}</div>\n                <div className=\"u-margin-top--s\">{hour}</div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Current;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { Icon } from '../';\nimport format from 'date-fns/format';\nimport { unixToDate } from '../../utils/';\nimport './_day.scss';\n\nclass Day extends Component {\n  static propTypes = {\n    day: PropTypes.array.isRequired,\n    dayId: PropTypes.string.isRequired,\n  }  \n  render() {\n    const { day, dayId } = this.props;\n\n    const date = format( unixToDate(day[0].dt), 'ddd' );\n    const weather = day[0].weather[0].main;\n    const min = Math.round(day[0].main.tempMin);\n    const max = Math.round(day[0].main.tempMax);\n\n    return (\n      \n      <div className=\"c-day u-text--center\">\n        <Link to={`/${dayId}`}>\n        <h3>{date}</h3>\n        <div className=\"a-icon\">\n          <Icon icon={weather} width={100} height={100}/>\n          </div>\n          <div>\n            <div className=\"flexgrid flexgrid--full flexgrid--center u-margin-top--s u-text--center\">\n              <div>\n                <div>{min}°</div>\n                <small>min</small>\n              </div>  \n              <div className=\"u-margin-left--s\">\n                <div>{max}°</div>\n                <small>max</small>\n              </div>  \n            </div>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Day;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../';\nimport format from 'date-fns/format';\nimport { unixToDate } from '../../utils/';\nimport './_hour.scss';\n\nclass Hour extends Component {\n  static propTypes = {\n    hour: PropTypes.object.isRequired\n  }  \n  render() {\n    const { hour } = this.props;\n\n    const time = format( unixToDate(hour.dt), 'h A' );\n    const weather = hour.weather[0].main;\n    const min = Math.round(hour.main.tempMin);\n    const max = Math.round(hour.main.tempMax);\n\n    return (\n      \n      <div className=\"c-hour u-text--center\">\n        <h3>{time}</h3>\n        <div className=\"a-icon\">\n          <Icon icon={weather} width={100} height={100}/>\n          </div>\n          <div>\n            <div className=\"flexgrid flexgrid--full flexgrid--center u-margin-top--s u-text--center\">\n              <div>\n                <div>{min}°</div>\n                <small>min</small>\n              </div>  \n              <div className=\"u-margin-left--s\">\n                <div>{max}°</div>\n                <small>max</small>\n              </div>  \n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Hour;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Hour from '../Hour/';\nimport { makeId } from '../../utils';\nimport './_dayForecast.scss';\n\nclass Forecast extends Component {\n  static propTypes = {\n    day: PropTypes.array.isRequired\n  }\n\n  printHours(day) {\n    return day.map((item, index) => {\n      return (<Hour key={makeId(5)} hour={item} />);\n    })\n  }\n\n  render() {\n    const { day } = this.props;\n    const hours = day && this.printHours(day);\n    return (\n      <div className=\"c-days flexgrid flexgrid--full flexgrid--space-around u-width-100 u-margin-top--l\">\n        {hours}\n      </div>\n    );\n  }\n}\n\nexport default Forecast;\n","import React, { Component } from 'react';\nimport { Day } from '../';\nimport { groupBy, makeId } from '../../utils/';\nimport PropTypes from 'prop-types';\nimport './_days.scss';\n\nclass DaysForecast extends Component {\n  static propTypes = {\n    days: PropTypes.array.isRequired\n  }\n\n  groupForecastByDay(days) {\n    return groupBy(days, 'dtTxt');\n  }\n\n  printDays() {\n    const { days } = this.props;\n\n    if (days.length === 0) {\n      return false;\n    }\n\n    const forecastByDays = this.groupForecastByDay(days);\n\n    if (!forecastByDays.length === 0) {\n      return false;\n    }\n\n    return Object.keys(forecastByDays).map((day, index) => (\n      (index > 0 && <Day key={makeId(5)} day={forecastByDays[day]} dayId={day} />)\n    ));\n  }\n\n  render() {\n    const days = this.printDays();\n    return (\n      <div className=\"c-days flexgrid flexgrid--full u-width-100 u-margin-top--l\">\n        {days}\n      </div>\n    );\n  }\n}\n\nexport default DaysForecast;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst validIcons = {\n  'storm' : 'storm',\n  'rain'  : 'rain',\n  'clear' : 'sun',\n  'clouds' : 'cloud',\n  'snow'  : 'snow'\n};\n\nclass Icon extends Component {\n  static propTypes = {\n    icon: PropTypes.string.isRequired,\n  }\n\n  getIcon(icon) {\n    icon = icon.toLowerCase();\n\n    if (!validIcons[icon]) {\n      return validIcons[2];\n    }\n\n    return validIcons[icon];\n  }\n \n render() {\n  const { icon, dimension = 60 } = this.props;\n  const iconName = this.getIcon(icon);\n\n  return (\n    <img\n      alt={iconName}\n      width={`${dimension}px`}\n      height={`${dimension}px`}\n      src={`${process.env.PUBLIC_URL}/icons/${iconName}.svg`} />\n  )\n }\n};\n\nexport default Icon;\n","import React from 'react';\n\nconst Spinner = () => (\n  <svg width='200' height='200' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'\npreserveAspectRatio='xMidYMid' className='lds-earth'>\n    <defs>\n        <clipPath id='cut-off'>\n            <circle cx='50' cy='50' r='35' />\n        </clipPath>\n    </defs>\n    <circle cx='50' cy='50' r='35' fill='#5699d2' />\n    <g clipPath='url(#cut-off)' fill='#1d3f72'>\n        <path transform='translate(-60.87)' d='M64.4,74.4c0.3,0.3,0.2,0.3-0.3,0.3C64.1,74.3,64.2,74.5,64.4,74.4z M31.4,75.4c-0.2,0.1-0.3-0.2-0.5,0.1c0.3,0.2,0.6,0.1,0.8-0.1C31.6,75.2,31.6,75.4,31.4,75.4z M84.9,36.9c-0.3,0.2-0.8-0.1-1.1-0.5 c0.1,0.2,0.1,0.6,0.3,0.9c-0.5,0.2-0.2,0.6,0.2,0.7c0-0.1,0-0.3,0-0.4c0.2,0.1,0.4,0.2,0.5,0.3c0.2-0.2,0.2-0.3,0.4-0.5 C85.1,37.2,85,37,84.9,36.9z M85.1,40.6c0-0.6-0.1-2.1-0.6-2.4c-0.6-0.4,0.5,2.1-0.6,1.6c0,0.2-0.1,0.5,0,0.7 c-0.8-0.3-0.9,0.5-1.4,0.9c0.3,0.3,0.4,0.6,0.6,0.9c0.3-0.4,0.2-0.9-0.3-1.2c0.2,0,0.4-0.2,0.6-0.2c0.2,0,0.6,0.2,0.6,0.2 C84.2,41,84.5,40.7,85.1,40.6z M83.7,41c-0.4-0.1-0.7,0.2-0.3,0.6c0.2-0.4,0-0.1,0.3-0.2C83.8,41.2,83.6,41.1,83.7,41z M93.5,62.8 c0.1,0.5,0.3,0.9,0.7,0.8C94.1,63.3,93.8,63,93.5,62.8z M93,71.2c-0.1-0.1-2.5,1.6-2.9,2.1c0.8,0.5,2.9-1.2,3.1-2.1 C93,71.5,92.9,71.2,93,71.2z M95,69.9c-0.4,0.2-0.6,0-0.5-0.4c0,0.1-0.1,0.2-0.1,0.3c0.1-0.5,0.1-0.8-0.1-1.1 c-0.3,0.7,0.1,1.4-0.7,2c0.3,0.3,0.3,0.4-0.1,0.7c0.1,0,0.1,0.1,0.1,0.2C93.9,71.3,95,70.2,95,69.9z M82,50.6 c0.2-0.2,0.3-0.2,0.3-0.5c-0.1,0-0.3-0.1-0.4-0.1C81.9,50.2,81.9,50.4,82,50.6z M82.4,50.6c-0.3-0.4-0.2,0.1-0.1,0.5 c0.2-0.3,0.3-0.5,0.2-0.9C82.5,50.4,82.4,50.5,82.4,50.6z M82.8,49.7c-0.1,0-0.2,0-0.3,0c0,0.1,0.2,0.4,0.2,0.5c-0.1,0-0.1,0-0.2,0 c0.1,0.2,0.1,0.3,0.2,0.5c0.1-0.2,0.1-0.2,0-0.5c0.1,0,0.2,0.1,0.2,0.1C83,50.1,82.9,49.9,82.8,49.7z M81,51 c0.2-0.3,0.3-0.4,0.2-0.8c-0.1,0.5-0.4,0.8-0.6,1.2C80.8,51.3,80.9,51.1,81,51z M81.2,48.6c0.1,0.2,0.1,0.5,0.3,0.3 c0,0.4,0.3,0.6,0.6,0.6c0,0,0-0.1,0.1-0.1c0.1,0.2,0.2,0.3,0.4,0.4c0-0.7-0.6-0.5-0.8-1c-0.2-0.4,0.2-0.9,0-1.4 c-0.5-0.1-0.6,0.3-0.4,1c0,0-0.1-0.1-0.1-0.1C81.1,48.3,81.1,48.4,81.2,48.6z M83.3,52.2c0.1-0.5,0.1-1.1-0.3-1.4c0,0.1,0,0.2,0,0.3 c-0.4,0.2-0.9,0.1-0.9,0.8c0.7-0.7,0.4,0.2,1,0.5c0-0.2,0.1-0.5,0.1-0.7C83.2,52,83.3,52.1,83.3,52.2z M81.5,49.6 c0.1-0.1,0.3-0.1-0.2-0.3C81.4,49.4,81.5,49.5,81.5,49.6z M91.8,57.4c0.1,0.1,0,0.2,0.2,0.1c-0.1-0.2-0.2-0.5-0.3-0.7 C91.6,57,91.7,57.1,91.8,57.4z M90.2,57.3c0.4-0.1,1.1-0.5,0.6-0.9c-0.1,0.4-0.2,0.6-0.4,0.3c-0.1,0-0.5,0.2-0.5,0.3 C89.9,57.2,90,57.2,90.2,57.3z M90.9,56.1c0.1,0.2,0.2,0.3,0.2,0.5c0.1-0.5-0.2-0.8-0.6-0.8C90.7,55.9,90.8,56,90.9,56.1z M90.3,59 c-0.2-0.4-0.7-0.7-1-1.6c0.1,0,0.2,0,0.3,0c-0.7-0.7-1.4-1.7-2.5-1.8c-0.5-0.1-1,0.5-1.3,0.3c-0.5-0.2-0.1-1.4-1.2-0.8 c0.3,0.4,0.6,0.5,0.9,0.6c-0.2,0-0.3,0.1-0.5,0.1c0.1,0.2,0.2,0.4,0.3,0.5c0.1,0,0.2-0.2,0.2-0.2c0.6,0.5,2,1,1,2 c0.6-0.3,0.7,0.4,1.2,0.3c0.4-0.1,0.4-0.5,0.6-0.5C89.2,57.9,89.5,58.9,90.3,59z M93.2,58.5c-0.1,0.1-0.2-0.2-0.2,0.1 C93.3,58.8,93.2,58.6,93.2,58.5z M92.4,57.7c0,0-0.1-0.2-0.2-0.3C92.2,57.6,92.3,57.6,92.4,57.7z M92.9,58c0.1,0.1,0.1,0.1,0.2,0.2 c-0.2-0.2-0.3-0.3-0.5-0.4C92.7,57.8,92.8,57.9,92.9,58z M93.5,59.1C93.6,58.9,93.6,58.8,93.5,59.1z M93.5,58.7c0-0.2,0-0.4-0.2-0.6 C93.3,58.3,93.4,58.5,93.5,58.7z M81,45.9c0.1-0.5,0.2-1-0.1-1.3C80.6,45,80.6,45.5,81,45.9z M94.8,61c0,0,0.1-0.2,0-0.4 C94.7,60.8,94.8,61.1,94.8,61z M94.8,61.2c0.1,0.1,0,0.3,0.2,0.1C94.9,61.1,94.8,61.2,94.8,61.2z M29.5,76.3 c-0.4-0.8-0.5-0.2-0.7-0.2c0.2,0-0.3,0.2-0.3,0.2c-0.2,0-0.6-0.3-0.9-0.4c0.9,0.9,1.9,1.2,2.6,0.7C30,76.6,29.8,76.4,29.5,76.3z M89.6,64.4c0-0.2-0.2-0.3-0.1-0.7c-0.2,0-0.1-0.1-0.3,0c0.1-0.8-0.5-1.1-0.7-1.7c-0.1-0.5,0-1-0.2-1.6c-0.1,0.1-0.1,0.1-0.2,0.2 c0-0.5-0.1-1.1-0.2-1.6c-0.5,0.9-0.5,3.8-1.7,2.2c-0.3-0.5-0.4-0.2-0.4-0.8c0-0.3,0.4-0.5,0.4-0.7c0-0.1-1.1-0.4-1.4-0.5 c0.3,0.3-0.7,0.7-0.8,1.5c-0.5-0.2-0.7-0.4-1.1-0.2c-0.4,0.1-0.7,0.9-0.7,1.1c0,0-0.1,0.1-0.1,0.1c0-0.1,0-0.2-0.1-0.3 c-0.4,0.8-0.6,1.1-1.3,1.4c-0.6,0.3-1.1,0.4-1.6,1c0-0.1,0-0.2,0-0.3c-0.3,0.6-0.5,1.1-0.3,1.8c-0.1-0.1-0.1-0.2-0.2-0.3 c0,0.1,0,0.3,0,0.4c0-0.1-0.1-0.1-0.1-0.2c0.1,1,0.1,1.7,0,2.7c0,0.4-0.6,0.5,0,0.9c0.4,0.2,0.7-0.3,1-0.4c0.8-0.2,1.4-0.5,2.3-0.7 c1.4-0.5,1.7-0.2,2.1,1.1c0.2-0.3,0.5-0.6,0.8-0.8c-0.1,0.4-0.3,0.7-0.6,1c0.2-0.1,0.3-0.2,0.5-0.4c-0.1,0.2-0.1,0.3-0.2,0.5 c0.5,0.2,0.5,2.1,1.5,0.9c0,0.1-0.1,0.1-0.1,0.2C86.9,71.3,90.8,66.1,89.6,64.4z M85.9,71.3c-0.4-0.2-1,0.2-0.7,0.8 c0.2,0.6,0.9-0.4,1.1-0.9C86.2,71.2,86.1,71.2,85.9,71.3z M24.6,44.3c0-0.2,0.2-0.3-0.1-0.5C24.5,44,24.6,44.2,24.6,44.3z M24.2,44.9c0.1,0.1,0.1,0.2,0.1,0.4c0.1-0.2,0.1-0.3,0-0.6C24.1,44.6,24.3,44.8,24.2,44.9z M24.4,43.9c-0.2,0-0.3-0.1-0.3,0.2 C24.3,44.1,24.4,43.9,24.4,43.9z M36.2,56.9c-1-0.3-1.6-1.5-2.7-1.1c0-0.7-0.8-0.9-1.2-0.6c0-0.4-0.4-0.5-0.5-0.8 c-0.1-0.1-0.1-0.7-0.2-1c-0.3-0.7-0.6-0.8-1.2-1.1c-0.6-0.3-0.6-0.2-1.1-0.8c-0.3-0.4-0.6-0.7-1-1c0.1,0,0.2-0.1,0.3-0.1 c-0.9-0.2-1.7,0.6-2.3-0.6c-0.4,0.3-0.4,0.8-0.6,1.2c0-0.3,0-0.7,0-0.9c0.4-0.6-0.1-0.2-0.5,0.1c-0.3,0.2-0.7,0.9-1,1 c0,0-1.6-0.3-1.6-0.3c-0.8-0.7,0.1-1.4-0.1-2.2c-0.2-0.8-1.1-0.3-1.6-0.5c0.2-0.3,0.3-0.7,0.3-1.1c0.1,0,0.1,0,0.1,0.1 c0.2-1.2,0.5-1.7-0.7-0.8c-0.6,0.5-1.3,1.5-1.8,0c-0.3-0.8,0-2.4,0.4-3.1c0.7-1.1,1.6-0.5,2.3-0.6c-0.1-0.7,1.4-0.4,1.6-0.3 c0.2,0.3,0.2,2.8,0.8,1.6c0.5-1-0.4-1.7,0.5-2.7c0.6-0.7,2-1.1,1.3-2.2c0.1,0,0.1,0,0.2,0.1c0-0.2,0-0.3,0.1-0.4 c0,0.4,0,0.4-0.1,0.8c0.3-0.4,0.3-0.4,0.3-0.9c0.1,0.1,0.1,0.1,0.1,0.2c0.2-0.3,0.4-0.5,0.4-0.7c0,0,0.4-0.1,0.6-0.1 c-0.1,0-0.3,0-0.5,0c0.4-0.2,0.8-0.2,1.1-0.4c-0.1,0,0,0-0.2,0c-0.1-0.9,1.4-1.5,1.9-1.4c-0.5,0.2-0.4,0.3-0.6,0.7 c0.5-0.1,1.4-0.5,1.9-0.9c0-0.1-0.1-0.3-0.1-0.4c-0.6,1.2-1.7-0.1-0.8-0.7c-0.7-0.6-1.3,0.5-2,0.8c0.5-0.5,1.1-1.2,1.7-1.3 c0.8-0.2,1.5,0.2,2.2-0.4c1.2-0.9,0.1-1.1-0.6-1.9c0.2-0.5-0.1-0.9-0.2-1.5c-0.5,0.5-1.8,1-1.1-0.3c-0.5,0-0.6-0.4-1.2-0.4 c-1,0-0.4,0.7-1.2,1.3c0.6,0.8-0.3,1.4-0.9,1.5c0.6,1.6-1.5,1.4-0.5-0.2c-0.8,0-1.4-1-2.2-0.7c0-0.6,0.1-0.4-0.3-0.7 c0.5-1.3,2.5-2.2,3.5-2.7c0.3-0.1,1.4-0.2,1.3-0.9c-0.2-1-1.3,0.4-1.7,0.6c0.1-0.2,0-0.2,0.1-0.5c-0.2,0-0.2-0.2-0.6,0 c0.1-0.1,0.1-0.2,0.2-0.3c-0.1,0-0.2,0-0.4-0.1c0.7-0.6-0.4-1-0.8-0.1c0.5,0.5-0.1,0.7-0.5,1c0.1-0.1,0.1-0.2,0.2-0.3 c-0.5-0.2-1,0.1-1.6,0c-0.4-0.1-0.7-0.4-1.2-0.1c0,0,0.1,0.1,0.1,0.1c-0.4,0.1-1.1,0.1-1.7,0c0.1-0.1,0.3-0.1,0.4-0.2 c-0.6-0.3-1.5-0.7-2.1-0.3c0.1-0.1,0.1-0.2,0.2-0.3c-0.4,0.3-0.9,0-1.4,0c-0.6,0.1-1.2,0.4-1.8,0.4c-0.6,0-2.5-0.4-2.7-0.6 c-1.3-0.2-2.7,0.3-4,0.8c0.3,0.2,0.3,0.4,0.4,0.8c-0.2,0-0.3,0-0.5,0c0.1-0.1,0.1-0.1,0.2-0.2c-0.4,0-0.9,0.2-1.3,0.3 c0.2,0.7,0.9,0.5,1.4,0.3c-0.3,0.5-0.9,0.4-1.5,0.6c-0.5,0.2-1.4,1.3-0.4,1.1c-0.1,0.1-0.1,0.3-0.3,0.5c0.2-0.1,0.3-0.1,0.5-0.1 c0,0.1,0,0.1-0.1,0.2c0.1,0,0.1-0.1,0.2-0.1c0,0.1,0,0.1,0,0.2c0.2-0.1,0.4-0.1,0.6-0.2c-1,0.9-2.2,1-3.2,1.7 c2.1-0.4,3.5-1.8,5.4-2.6c-0.3,0.1-0.7,0.4-0.8,0.8c0.8-0.2,1.2-0.4,1.9-0.4c0.8,0.1,1.3,0.9,2.1,0.8c-0.1,0.6-0.1,1.8,0.3,2.2 c-0.6,0.8,1.3,1,0.4,2c-0.2-1.2-0.9,1-1.2,1.6c-0.4,0.8-0.5,2-0.2,2.8c0.2,0.4,1.7,3,0.9,3.3c0.6,0.7,0.6,1.2,1,2 c0.6-0.7-1.1-2.5-0.6-3.6c0.4,0.2,0.8,1.8,1,2.3c0.2,0.4,0.6,1.1,0.8,1.6c0.1,0.7-0.2,0.6,0.2,1.3c0.2,0.4,0.9,0.7,1.3,0.9 c0.5,0.3,1,0.1,1.3,0.2c0.8,0.3,1.4,1.1,2.1,1.3c0,0-0.1,0-0.1,0c0.4,0.5,0.5,0.9,0.7,1.3c0.1-0.1,0.1-0.1,0.1-0.2 c0.4,0.6,0.9,1.2,1.4,1c-0.1-0.8,0.3-0.4,0.5-0.1c0.3,0.5,0.3,1.3,0.2,1.7c-0.2,0.7-1.6,1.6-0.9,2.5c0-0.1,0.1-0.1,0.1-0.2 c0,0.6-0.4,0.8-0.3,1.5c0.1,0.3,0.7,1.2,0.9,1.6c0.3,0.7,0.5,1.6,1,2.1c0.5,0.6,1.3,0.7,1.6,1.4c0.3,0.7,0.2,2,0.2,2.8 c0,1,0.2,1.8,0.2,2.7c0.1,1.2-0.5,3.5,0.3,4.4c0-0.2,0-0.3,0-0.5c0.3,0.3,0.2,0.4,0.3,0.9c-0.1,0-0.2-0.1-0.3-0.1c0,0.5,0,0.6-0.1,1 c0.1,0,0.3,0.1,0.4,0.1c-0.8,1.1,0.7,2.6,1.6,2.7c-0.1-0.5,0.1-0.6,0.6-0.6c-0.6-0.4-0.2-0.6-0.2-1c0-0.2,0.3-0.7,0.3-0.7 c0-0.2-0.3-0.5-0.3-0.4c0-0.1-0.3-0.3-0.3-0.6c0-0.2,0.4-0.2,0.4-0.2c0.1-0.5-0.2-0.7,0.3-1c0-0.1-0.1-0.1-0.1-0.2 c-0.8,0,0-0.5,0-0.4c0.1-0.3,0.5-0.3,0.1-0.9c1.8,0.4,1.2-1.1,0.8-2c1,0.9,1.4,0,1.9-1c0.6-1.3,0.3-2.4,1.5-3.2 c0.7-0.5,0.7-0.1,1.1-1c0.3-0.8,0.3-1.4,0.4-2.2C35.4,59.7,36.6,58.3,36.2,56.9z M24.2,26.2c-0.2,0-0.3-0.1-0.5,0 C23.9,26.6,23.9,26.3,24.2,26.2z M22.4,25.3c-0.2,0.1-0.4,0.2-0.5,0.3c0.4,0.1,0.8,0,1.2,0c-0.2,0-0.4,0.2-0.6,0.2 c0.5,0,1.7,0,2-0.5c-0.2,0-0.3,0-0.4,0c0-0.1,0-0.2,0.1-0.3c-0.4,0.1-0.3-0.1-0.4,0.4C23.3,25.5,22.8,25.2,22.4,25.3z M24.2,27.3 c-0.5-0.1-0.6-1.9-1.2-0.5c0-0.6-0.7-0.4-1.2-0.3c0.1-0.1,0.1-0.1,0.2-0.2c-0.5-0.1-1.1,0.2-1.5,0.5c0.2,0,0.4,0.1,0.7,0.1 c-0.2,0-0.4,0.1-0.6,0.1c0.3,0.2,0.8,0.1,1.2,0.2c-0.4,0-0.8,0.1-1.2,0.1C21.2,28.1,23.6,27.9,24.2,27.3z M24,24.9 c0-0.3-0.3-0.1-0.7,0C23.6,25,23.8,24.9,24,24.9z M21.6,25.4c0.4-0.1,0.9-0.1,1.2-0.5c-0.6,0-1.2,0.2-1.8,0.5 C21.2,25.4,21.4,25.4,21.6,25.4z M32.4,34.8c-0.1,0-0.2,0.2-0.3,0c0,0,0.1-0.1,0.1-0.1c-0.1,0-0.3,0-0.4,0c0.2-0.2,0.3-0.5,0.5-0.7 c-0.6,0.1-1.2,1.1-1.3,1.6c0.3,0,0.7,0,1,0.1c-0.1,0.1-0.1,0.1-0.2,0.2c0.1-0.1,0.4-0.2,0.5-0.3c0,0.1,0,0.2-0.1,0.4 c0.4,0,0.5-0.3,0.4-0.7c-0.1,0-0.1,0-0.2,0.1c0-0.1,0.1-0.2,0.1-0.3C32.6,34.9,32.5,34.9,32.4,34.8z M14,35c0.7,0.6,0.5-0.1,0.2-0.5 C13.7,34.1,13.5,34.6,14,35z M19.6,27.1c0.8-0.1,1.5-0.7,2.3-0.8c-0.9-0.9-1.9,0-2.6,0.5C19.5,26.8,19.5,27,19.6,27.1z M27.7,29.4 c-0.8-0.6-0.7-0.5-1.6,0.2c0.1,0,0.4,0.2,0.3,0.2C27,29.4,27.6,29.7,27.7,29.4z M13.3,33.1c-0.2,0.2-0.3,0.4,0,0.7 c0.1-0.2,0.2-0.5,0.3-0.7C13.4,33.1,13.4,33.1,13.3,33.1z M27.5,30.1c0.1,0,0.1,0.3,0.2-0.1C27.6,30,27.6,30.1,27.5,30.1z M29.8,36 c-0.1,0,0-0.3-0.2-0.1c0.3,0.2,0.2,0.2,0.6,0.1C30.1,36.1,29.9,36.1,29.8,36z M26.7,30c0.2,0,0.3,0.1,0.6-0.2 C27,29.8,26.9,29.9,26.7,30z M30.5,35c-0.2-0.2-0.3-0.3-0.6-0.3C30.1,34.9,30.3,34.9,30.5,35z M27,25.3c0,0.2,0.1,0.2,0,0.5 c0.7,0.2,2.2,0.4,2.7-0.2c-0.7-0.3-1.4,0.1-2.1-0.2c0,0,0.1-0.1,0.1-0.1c-0.4-0.2-0.8-0.3-1.3-0.1C26.7,25.3,26.8,25.3,27,25.3z M26.8,24.9c0.2,0,0.3,0,0.5,0C27.2,24.8,26.9,24.9,26.8,24.9z M27.5,24.4c0.1,0,0.2,0,0.4,0c-0.1,0.1-0.2,0.1-0.3,0.2 c0.6,0.4,1.2,0,1.8-0.2c-0.5-0.6-1.3-0.6-2-0.2C27.3,24.4,27.4,24.2,27.5,24.4z M26.3,25.8c0.2,0,0.3,0.1,0.5-0.1 C26.6,25.6,26.1,25.4,26.3,25.8z M27,24.8c-0.1-0.2-0.1-0.3-0.5,0C26.8,24.9,26.8,24.7,27,24.8z M29.7,26.4c0.1,0,0.3,0,0.5,0 c-0.2-0.3-0.6-0.4-0.9-0.2C29.4,26.5,29.4,26.4,29.7,26.4z M26.9,26c-0.5-0.1-0.9,0.1-1,0.7c0.5-0.1,1-0.3,1.4-0.6 C27.1,26.1,27,26,26.9,26z M31.5,27.3c-0.4-0.3-0.7-0.5-1.2-0.4c-0.2-0.6-0.9-0.4-1.3-0.2c0.3-0.8-0.6-0.5-1-0.2 c0-0.1,0-0.1-0.1-0.2c0.1-0.1,0.2-0.1,0.3-0.2c-0.6,0-1.1,0.2-1.4,0.8c0.1,0,0.2,0,0.3,0C27.1,27,27,27,26.9,27.1 c0.6,0.3,2.7,0.1,2.5,0.6c0.8,0.1,0.7,0.4,0.2,0.9c-0.3,0.3-0.9,0.1-1.3,0.6c0.5,0.2,0.9-0.2,1.4,0.3c0,0-0.1,0.1-0.1,0.1 c0.4,0.3,0.8,0.5,1.2,0.5c-0.1-0.2-0.2-0.5-0.4-0.7c1.4,1.5,0.5-0.9,0.4-0.7c0.3-0.6,0.9,0.8,1.6-0.4c-0.5-0.1-0.8-0.5-1.3-0.6 c0.2-0.1,0.3-0.1,0.5-0.2C31.6,27.5,31.5,27.4,31.5,27.3z M25.7,24.7c0.2,0.1,0.4,0.1,0.6,0.1c-0.1-0.4-0.5-0.5-0.9-0.3 c0.1,0,0.1,0,0.2,0.1c-0.1,0-0.2,0.1-0.3,0.1C25.4,24.7,25.5,24.7,25.7,24.7z M29,24c0.5,0.1,0.9,0.1,1.4,0.1 c-0.3,0.1-0.7,0.1-1,0.1c0.1,0.2,0,0.1,0.2,0.3c-0.2,0.1-0.5,0.2-0.8,0.3c0.2,0.1,0.3,0.2,0.4,0.3c-0.4-0.2-0.8,0-1.1,0.3 c0.7,0.1,1.9,0.3,2.5-0.2c-0.1,0-0.2,0-0.4,0c0.4-0.3,1-0.4,1.2-0.7c-0.1,0-0.2,0-0.3,0c0.9,0,1.8-0.4,2.7-0.6c-0.1,0-0.3,0-0.4,0 c0.4-0.1,0.9-0.1,1.3-0.3c-1.6-0.4-4.4-0.4-5.9,0.3C28.9,23.8,28.9,23.9,29,24z M29.5,28.2c-0.2-0.3-0.3-0.3-0.5,0.2 C29.3,28.4,29.4,28.3,29.5,28.2z M24.4,24.6c-0.2,0-0.4-0.1-0.6,0.1C24,24.7,24.2,24.6,24.4,24.6z M25,27.4c-0.2,0-0.4,0-0.7,0.2 c0.3,0.2,0.6,0.2,0.9,0.1C25.2,27.4,25.1,27.5,25,27.4z M24.4,26.5c0.4,0.5,0.9,0.5,1.3,0c-0.1,0-0.2-0.1-0.2-0.1 c0.2-0.1,0.2-0.1,0.3-0.3c-0.4,0-0.9-0.1-0.9,0.3C24.7,26.4,24.6,26.5,24.4,26.5z M25.3,25.7c0.4,0.2,0.9-0.1,0.9-0.5 c-0.4,0-0.8,0-1.1,0.4C25.5,25.4,25.3,25.7,25.3,25.7z M78.1,46.7c-0.7,0.3-0.2,0.9,0,0.7C78.4,47,78.4,46.8,78.1,46.7z M24.7,46.8 c0.2,0,0.3,0,0.4-0.2c-0.8-0.5-2-1.9-3-0.7c0.3-0.1,0.6-0.2,0.9-0.3c0,0-0.1,0.1-0.1,0.1c0.6,0.3,1,0.3,1.4,0.8 c-0.1,0.1-0.1,0.2-0.2,0.2C24.3,46.7,24.5,46.8,24.7,46.8z M55.7,40.5c-0.1,0.1-0.2,0.1-0.4,0.1c0.4,0.2,0.3,0.1,0.6-0.2 C55.9,40.4,55.8,40.4,55.7,40.5z M49.5,32.8c0.1-0.4,0.2-0.6-0.3-0.4C49.2,32.7,49.3,32.7,49.5,32.8z M48.9,38.1 c0-0.3,0.1-0.4,0-0.7C48.6,37.7,48.8,37.8,48.9,38.1z M45.1,32.6c0.1-0.1,0.1-0.3,0.2-0.1c0,0.1,0.4,0.4,0.4,0.6 c0,0.4-0.6-0.1-0.3,0.6c-0.1,0-0.2,0.1-0.3,0.1c0.1,0,0.3,0.2,0.5,0.2c-0.2,0.1-0.4,0.3-0.6,0.5c0.7,0,1.9,0,1.9-1 c-0.6-0.2-0.6-1-1.2-1.2c0.2-0.2,0.2-0.5,0.3-0.6c-0.2,0-0.3,0-0.5,0c0.1-0.1,0.2-0.3,0.3-0.4C45,31.2,44.9,32,45.1,32.6z M53.3,40.5c-0.2,0-0.2,0.1-0.4-0.1c0,0.1,0,0.1,0,0.2c0.3,0.1,0.5,0.2,0.8,0C53.5,40.5,53.5,40.5,53.3,40.5z M41.5,27.3 c-0.3,0-0.6,0-0.9,0c0-0.1,0.2-0.4,0.2-0.4c0.3,0.3,0.4,0.3,0.8,0.3c-0.2-0.3-0.2-0.4-0.6-0.6c0.1,0,0.3,0,0.5,0 c-0.1-0.1,0-0.2-0.2-0.4c0.3,0,0.5-0.1,0.7-0.2C42,26,42,26,41.9,26c0.2,0,0.3,0,0.5,0c-0.1-0.1-0.2-0.2-0.2-0.3 c0.3-0.2,0.3-0.2-0.1-0.5c0.2,0,0.5-0.1,0.7-0.1c-0.3-0.4-0.2-0.7,0.3-0.9c-0.2,0-0.3,0-0.5,0c0.5,0,1-0.2,1.6-0.3 c-0.6-0.3-1.5-0.1-2.1,0c0.1-0.1,0.2-0.1,0.2-0.2c-0.6-0.1-1.3-0.1-1.9-0.1c0.7,0,1.5,0.1,2.2-0.1c-1.4-0.2-3.8-0.7-5,0.1 c0.1,0,0.3,0.1,0.4,0.1c-1.6-0.3-3.3-0.2-4.8,0.4c0.2,0,0.3,0.1,0.5,0.1c-0.6,0.3-1.4,0.1-1.9,0.5c0.4,0.1,0.8,0.2,1.2,0.2 c-0.3,0-0.7,0-1,0.1c0.2,0.2,4.1,0.7,2.5,1.7c0.3,0.1,0.5,0.2,0.8,0.4c-0.9-0.5-1,0.9,0,0.2c-0.6,1-1.2,0.7-0.8,2.1 c0.2,0.7,0.5,0.9,0.9,1.1c0.7,0.4,0.6,0.2,1.1-0.4c0.1-0.1,0.4-0.9,0.6-1.1c0.4-0.3,0.8-0.2,1.1-0.4C39.3,28.2,40.4,27.9,41.5,27.3z M25.3,47.4c0.3,0.1,0.4-0.1,0.6,0.3c0.2-0.4,0.6-0.3,0.9-0.4c-0.3-0.4-0.9-0.7-1.4-0.4c0.2,0.2,0.1,0.2,0.3,0.4 c-0.2,0-0.3,0.1-0.6,0C25,47.6,25.1,47.4,25.3,47.4z M80.8,58.3c0.1,0,0.2-0.1,0.3-0.1C81,58,80.7,58,80.5,58.4 C80.6,58.4,80.7,58.3,80.8,58.3z M82.5,56.6c-0.2-0.4-0.3-0.7-0.5-1.1c0.2-0.1,0.3-0.3,0.5-0.3c0-0.1,0-0.1,0-0.2 c-0.4,0.2-1.4,0.1-0.8-0.4c0.5-0.4,1.2,0.5,1.3-0.5c-0.4,0.6-0.9,0-1.3,0.2c-0.3,0.2-0.5,1.1-0.5,1.5c0,0,0.3,1.2,0.2,1.2 c0.4,0.2,0.2-0.9,0.4-1.2c0,0.4,0.1,0.6,0.2,0.9c0.1-0.1,0.2-0.1,0.3-0.2c-0.1,0.3,0,0.3,0,0.5C82.5,56.9,82.4,56.8,82.5,56.6z M78.5,55.3c0.1,0.8,1.5,1.1,1.9,1.1c0.1-0.7,0.3-1.8,0.9-2c-0.6-0.8-0.4-1.3,0-1.8c-0.4-0.2-0.5-0.6-0.8-0.5 c-0.3,0.1-0.6,0.9-0.8,1.1C79.1,53.9,77.9,54,78.5,55.3z M85.8,57.1c-0.1,0.1-0.2,0-0.2,0.5C85.8,57.4,85.7,57.2,85.8,57.1z M83.6,56c-0.1,0-0.2,0-0.3,0C83.6,56.5,83.5,56.1,83.6,56z M81.6,58.9c-0.1-0.2-0.1-0.4-0.5-0.3C81.3,58.8,81.4,58.8,81.6,58.9z M82.3,58.2c-0.1-0.2-0.5-0.1-0.8,0.1C81.7,58.4,82,58.3,82.3,58.2z M78.7,58c0.5,0.1,1,0.2,1.5,0.1c-0.6-0.3-2.6-1.5-3-0.6 C77.7,57.7,78.2,57.8,78.7,58z M77.4,56.5c0.3-1-2-4.1-3.1-3.9c0.4,0.9,1,1.6,1.5,2.5C76,55.4,77.5,58.3,77.4,56.5z M84.2,56.1 c0.2,0.1,0.3,0,0.5,0.2c-0.2-0.5-0.6-0.6-0.9-0.2C84,56.1,84.1,56.1,84.2,56.1z M83.9,55.1c0.1-0.4,0.3-0.8-0.1-1.2 C83.7,54.3,83.7,54.7,83.9,55.1z M82.7,58.8c0.2-0.3,0.6-0.5,0.9-0.7c-0.5,0-1,0.2-1.2,0.8C82.5,58.9,82.6,58.9,82.7,58.8z M44.1,33.6c-0.1,0.1-0.1,0.3-0.2,0.4c0.4,0.1,1.4-0.5,1.1-1C44.7,32.3,44,33,44.1,33.6z M41.8,29.6c0.5,0.1,1.1-0.1,1.5-0.5 c0-0.1-0.2-0.4-0.2-0.5c-0.6,0.1-1.9-0.2-2.3,0.3c0.2,0,0.3,0.1,0.5,0.1c-0.1,0-0.2,0.1-0.4,0.2c0.2,0.1,0.3,0.1,0.5,0.2 c-0.1,0.1-0.2,0.1-0.2,0.2C41.4,29.5,41.6,29.5,41.8,29.6z M48.7,38.5C48.8,40.2,49,37.2,48.7,38.5z M50.5,39.4 c-0.2,0-0.4,0.1-0.6,0c0.1,0.3,0.4,0.5,0.7,0.6C50.7,39.5,50.6,39.5,50.5,39.4z M24.1,47.3c-0.1,0.1-0.2-0.1-0.2,0.1 c0.3,0.2,0.3,0.2,0.6,0.1C24.4,47.3,24.3,47.4,24.1,47.3z M70,51c-0.1-0.1-0.1-0.1-0.2-0.2C69.3,52.7,70.9,52.3,70,51z M61,60.2 c0-0.2-0.1-0.4-0.2-0.6c-0.1,0.3-0.3,0.5-0.4,0.7c-0.1,0.8-0.9,0.8-1.1,1.4c-0.2,0.4,0.1,0.7,0,1.1c-0.1,0.4-0.3,0.6-0.4,1 c-0.1,1.2,0.5,1.5,1.1,0.7c0.5-0.7,0.9-2.6,0.9-3.5c0,0.1,0.1,0.2,0.1,0.2C61.1,60.9,61,60.6,61,60.2z M74.3,48.1 c-0.9,0.8-1-2.4-2-2.6c0,0.2,0,0.2,0,0.4c-0.3-0.1-0.5,0-0.9,0.1c0.1,0.9-1.3,1.5-1.5,2.2c-0.2,0.6-0.2,2.1-0.3,2.7 c-0.1,0.1-0.3,0.4-0.5,0.5c-1-1.2-1.5-3.8-1.8-5.4c-0.6,0.6-1.1-0.6-1.6-1c-0.5-0.5-0.4-0.4-1.1-0.5c-0.5-0.1-0.9,0.1-1.3-0.1 c-0.4-0.2-0.5-0.6-0.8-0.7c-0.3-0.1-0.5,0.2-1,0c-0.7-0.3-0.8-1.5-1.5-1.1c0.1,0.9,0.8,1.3,1,2.1c0-0.2,0.1-0.4,0.1-0.5 c0.1,1.3,1,0.8,1.4-0.1c-0.1,0.9,0.5,0.7,0.8,1.1c0.4,0.8,0.2,0.6-0.1,1.2c-0.4,1-0.6,1.2-1.5,1.7c-0.6,0.4-2,1.9-2.6,1.1 c-0.3-0.4-0.1-0.9-0.2-1.3c-0.2-0.5-0.7-1-0.9-1.4c-0.4-0.8-1.8-3-1.6-3.7c0,0.3-0.2,0.5-0.2,0.7c-0.2-0.3-0.4-0.5-0.5-0.9 c0.1,0.8,0.6,1.5,0.9,2.2c0.3,0.7,0.4,1.4,0.7,2.1c0.3,0.7,2,2.5,1.7,3c0.5,0.9,1.8,0.2,2.4-0.1c0.1,3.4-3.7,4.9-3.4,7.8 c0.1,1.4,0.7,2.7-0.3,3.9c-0.7,0.8-1,0.7-1.1,1.7c0,0.5,0.2,0.8-0.1,1.3c-0.1,0.2-0.6,0.3-0.7,0.5c0,0.1,0,0.5-0.1,0.7 c-0.2,0.5-0.5,1.1-0.9,1.5c-0.5,0.6-0.9,0.8-1.4,1c-0.2,0.1-1.4,0.4-1.5,0.4c-0.6-0.2-0.2-0.7-0.3-1.2c-0.2-0.8-0.6-1.4-0.8-2.2 c-0.2-0.9-0.2-1.6-0.5-2.5c-0.3-0.8-0.5-1.3-0.2-2.2c0.3-1.4,0.5-2.2,0.1-3.5c-0.3-1-0.9-1.5-0.9-2.5c0-0.8,0.3-1.3-0.2-1.9 c-0.9,0.6-1.1-0.8-2.2-0.5c-0.7,0.2-1.9,0.8-2.6,0.6c-1.5-0.3-2.2-3.1-2.8-4.2c0.8-0.8,0.2-2.2,0.4-3c0.1-0.4,0.4-1.2,0.6-1.5 c0.4-0.6,0.9-0.7,1.2-1.3c0.5-0.8,0.3-1.3,1-2c0.8-0.9,0.3-0.3,1.4-0.5c0.9-0.1,2.7-1.4,3.4-0.6c0.1,0,0.2-0.1,0.2-0.1 c-0.2,0.8-0.3,1.2,0.3,1.7c0.5,0.4,1.7,1.1,2.2,0.8c0.1,0,0-0.6,0.5-0.7c0.2-0.1,0.7,0.4,0.9,0.5c0.5,0.2,1.7-0.1,1.9,0.3 c0.9,0.2,1-1.5,1-2.3c-0.6,0-1.4,0.3-1.9,0.1c-1.2-0.5-0.9-1.5,0-1.9c0.4-0.2,1.1-0.3,1.6-0.3c0.4,0,1,0.7,1.4,0.3 c0.6-0.6-0.9-1.3-1.3-1.6c0.3-0.4,0.2-0.2,0.2-0.5c0.1-0.1,0.2-0.1,0.4-0.2c-0.4-0.1-1.6,0.5-0.6,0.6c-0.4,0.4-0.8,0.5-1.1,0.1 c0.1-0.1,0.2-0.1,0.3-0.2c-1-0.9-1.9,1.4-1,1.8c-0.2,0.1-0.5,0.3-0.7,0.5c-0.2-0.4-0.3-0.3-0.7-0.2c0.1,0.1,0.1,0.1,0.2,0.2 c-0.3-0.1-0.2,0.1-0.4-0.1c0,0.5,0.2,0.7,0.4,1.1c-0.1,0-0.2-0.1-0.3-0.1c0.1,0.2,0.1,0.2-0.1,0.2c0,0.1,0.1,0.2,0.1,0.4 C52,40,52,38.4,51.7,37.9c-0.3-0.5-1.4-1.3-1.6-1.2c-0.1-0.2,0-0.2,0-0.3c-1.3,0,1.2,2,1.3,2.3c-0.7-0.5-0.1,0.3-0.7,0.8 c0.3-1-0.8-1.3-1.3-1.8c-0.6-0.6-0.2-0.5-0.9-0.6c-0.5-0.1-1.1,0.5-1.3,0.7c-0.8,0.6-0.7,1.7-1.5,2.2c-0.8,0.5-1.1-0.4-1.8-0.1 c-0.1-0.5-0.2-2.3,0.1-2.6c0.4-0.5,1.5,0.4,1.9-0.1c0.7-0.8-0.5-1.5-0.8-2c0.3,0,0.5-0.1,0.8,0c0-0.1-0.1-0.3-0.1-0.4 c0.5,0.3,0.9-0.3,1.2-0.6c0.3-0.3,0.8-0.7,1-0.9c0.1-0.2,0.3,0.2,0.4-0.1c0,0-0.1-0.3-0.1-0.4c0.2-0.4-0.2-0.8,0.5-1 c0,0.1,0.1,0.4,0.1,0.5c-1.1,0.9,1.1,0.8,1.5,0.7c0.6-0.1,0.7,0.1,1.1-0.3c0.2-0.2-0.2-1.4,0.7-0.6c0-0.2,0-0.3,0-0.5 c-0.2-0.1-0.1-0.1-0.3-0.3c0.5-0.2,0.9,0,1.3-0.3c-0.6-0.4-1.5,0.5-1.9-0.3c-0.4-0.7,0.2-1.2,0.8-1.5c-0.5-0.8-0.9,0.1-1.2,0.5 c-0.7,0.9-0.3,0.8-0.4,1.8c0,0.2-0.6,1.4-0.9,1.3c-0.4-0.1-0.7-1.2-1-1.4c-0.3-0.1-1.5,0.8-1.2-0.8c0.1-0.6,1.1-1,1.6-1.5 c1-1.1,2.6-2.5,4.1-1.6c-0.1,0-0.2,0.1-0.3,0.1c0.4,0.2,2.3,0.3,2.6,0.9c0.4,1-1.2,0.3-1.6,0.4c0.5,0.3,0.5,0.9,1.1,1 c-0.1-0.1-0.1-0.2-0.2-0.3c0.2,0,0.6,0,0.9,0c-0.1-0.1-0.1-0.2-0.2-0.3c0.3-0.3,0.6-0.4,0.9-0.2c0-0.3-0.1-0.6-0.3-0.9 c0.4,0,0.6,0.1,0.8,0.3c-0.1,0-0.2,0-0.3,0c0.4,0.6,1.1-0.3,1.9-0.4c-0.1,0.1-0.1,0.1-0.2,0.2c0.5,0,1.2-0.1,1.6-0.3 c-0.1-0.1-0.2-0.1-0.3-0.2c0.6-0.2,1.5,0.2,2.1,0.5c0-0.1,0.1-0.1,0.1-0.2c-0.7-0.3-1.2-1.5-0.2-1.4c0.5,0,1.4,1.7,1,2.2 c0.4,0,0.5-0.1,0.6-0.5c-0.4-0.4-0.6-0.8-1-1.2c0.1-0.1,0.2-0.1,0.3-0.2c-0.1-0.1-0.1-0.2-0.2-0.2c0.2,0.2,0.4,0.4,0.6,0.6 c-0.1-0.1-0.1-0.2-0.2-0.2c0.4-0.2,0.8-0.2,1.2,0c-0.3-0.2-0.3-0.4-0.5-0.6c0.4-0.1,0.9-0.1,1.3-0.1c-0.1-0.1-0.2-0.1-0.3-0.2 c0.6-0.7,1.8-0.5,2.7-0.6c0.1-0.4,0.5-0.5,0.9-0.3C68.1,25,68,25,67.9,25c0.7,0.2,1.8-0.1,2.3,0.6c-0.2,0.1-0.5,0.3-0.7,0.4 c1.1,0.1,2.1,0.5,3.2,0.4c-0.1-0.1-0.1-0.2-0.2-0.2c1.1,0,1.5,0.7,2.5,1c0-0.1-0.1-0.2-0.1-0.4c0.6,0.2,1.2,0.1,1.8,0.1 c-0.1-0.1-0.3-0.2-0.4-0.3c0.5-0.3,1.7-0.1,2.3,0.1c0.7,0.2,1.4,0.2,2.1,0.4c1.1,0.2,2.5,0.9,3.6,0.7c-0.2-0.1-0.3-0.2-0.5-0.4 c1.8,0.3,2.5,0.3,3.9,1.8c-0.2,0-0.2,0.1-0.5,0.1c0.4,0.2,0.9,0.4,1.2,0.8c-0.6-0.2-1.3,0.2-1.3,0.9c-0.5-0.4-1.1,0-1.6,0 c0,0.9,0.6,0.7,1,1.4c-0.1,0-0.1,0-0.2,0c0.1,0.2,0.2,0.3,0.3,0.5c-0.1,0.1-0.2,0.1-0.3,0.2c0.1,0.1,0.1,0.3,0.2,0.4 c-0.1,0-0.2,0.1-0.3,0.1c0.2,0.4,0,0.4,0,0.7c-0.7-0.7-1.6-1.6-1.8-2.6c0.5-0.2,1-1.7,0.2-1.7c0.2,1-0.4,0.2-0.7,0.3 c-0.4,0.2-1.1,0.3-0.3,0.9c-0.6,0.3-1.3-0.1-2,0c-1.2,0.1-1.2,0.4-1.8,1.7c1.2,0.2,2.2,0.4,2.5,2.1c0.1,0.6,0.1,1.6-0.2,2.1 c-0.4,0.5-0.6,0.3-0.9,0.6c0,0-0.4,0.9-0.4,0.9c0.1,0.5,0.3,0.4,0.6,0.9c1.1,1.9-0.9,1.2-0.5,0.3c-0.2-0.2-0.7-0.8-0.7-0.8 c-0.4-0.2-0.5-0.6-1.1,0c0.4-1.3-0.9-0.4-0.9,0c0,0.9,1.3,0.4,1.6,0.8c-1.4,0.4,0.5,2.1,0.6,2.8c0.2,1.5-0.7,2.5-1.6,3.1 c-0.3,0.2-0.4,0.3-0.8,0.4c-0.1,0,0.1,0.4-0.1,0.4c-0.1,0-0.2-0.3-0.2-0.3c-0.1,0-1-0.5-1,0.7c0,0.8,1.1,1.3,1.3,2.1 c0.2,1.1-0.4,1.4-1,2.1c0-0.5-0.9-1.6-1.4-1.6c0-0.1,0-0.2,0-0.3c-0.1,0-0.2,0-0.3,0c0,0.6-0.1,1.2,0,1.7c0.1,0.4,0.5,0.7,0.7,1.1 c0.4,0.8,0.5,1.3,0.8,2.1c-1.2-0.2-1.1-2-1.8-2.8c0,0.1,0,0.2,0,0.2C75.1,51,75,47.7,74.3,48.1z M53.6,51.4 c-0.1-0.1-0.1-0.1-0.2-0.2C53.5,51.3,53.5,51.4,53.6,51.4z M61.2,39.7c-0.1-0.7-0.4-0.9-0.5-1.5c0.3,0.1,0.3,0,0.5,0 c-0.2-0.4-0.5-0.6-0.5-0.1c-0.1-0.7-0.6-0.8-0.9-1.4c0.1,0,0.2,0,0.3,0c0.2-0.4-0.1-0.3,0.4-0.3c0.1-1-1-0.7-1.3-0.2 C58.7,37,59.4,38,60,38.5C59.1,39.1,60.4,40.4,61.2,39.7z M50.4,24.2c0.4,0.2,1,0.2,1.5-0.1c-0.6-0.2-1.4-0.2-2-0.1 C50.1,24.2,50.2,24.2,50.4,24.2z M51,25c0.1,0,0.3-0.1,0.4-0.1c-0.3-0.1-0.5-0.1-0.8-0.1c0.1,0.3,0.1-0.1,0,0.2 C50.8,24.9,50.9,24.9,51,25z M49.1,24.8c0.1,0,0.2,0.1,0.3,0.1c-0.1,0-0.1,0.1-0.2,0.1c0.7,0.5,0.8-0.4,1.5-0.5 c-0.9-0.3-1.4-0.2-2.2-0.2C48.7,24.5,48.9,24.7,49.1,24.8z M27.1,47.3c0.1,0.1,0,0.4,0.4,0.1C27.4,47.3,27.3,47.3,27.1,47.3z M55.6,24.1c0.3,0.1,0.6,0,0.9-0.1c-0.5,0-0.8,0-1.3,0C55.5,24,55.7,24.2,55.6,24.1z M57.7,26.9c0.4,0.2,0.9,0.4,1.4,0.3 c-2-0.4,1.3-1.7,1.6-1.9c-0.7-0.3-1.8,0.1-2.5,0.5c-0.1,0.2,0,0.1-0.3,0.4c0.1,0,0.1,0,0.2,0C57.7,26.4,57.7,26.6,57.7,26.9z M65.1,24.4c0.5,0.1,1,0.2,1.5,0.2c-0.4-0.6-1.5-0.9-2.1-0.4C64.7,24.1,64.8,24.3,65.1,24.4z M75.7,25.8c0.3-0.1,0.7-0.1,1.1-0.1 c-0.3-0.5-1.3-0.5-1.8-0.4C75.2,25.7,75.4,25.8,75.7,25.8z M67.6,24.6c-0.5-0.2-0.9-0.4-1,0.2C67,24.8,67.5,24.8,67.6,24.6z M76.6,26.1c-0.2,0.1-0.2,0-0.3,0.2c0.3,0.1,0.6,0.1,0.8,0.1C77,26.2,76.8,26.1,76.6,26.1z M5,29.1C5,29.1,5,29.1,5,29.1z M7.7,27 c-0.2-0.1-0.3-0.2-0.6,0.1C7.3,27.1,7.5,27,7.7,27z M82.3,33.9c0.6,0.5,0.9,1.6,1.4,2.3c0-0.1,0-0.2,0-0.3c0.1,0.1,0.2,0.2,0.3,0.2 c-0.3-0.4-0.7-0.7-0.7-1.2c0.2,0,0.3,0.1,0.5,0.1c-0.6-0.6-1.2-1.8-1.8-2C82.1,33.3,82.2,33.4,82.3,33.9z M5.5,28.8 c0,0,0.3,0.1,0.5,0.1c0.1,0.8,1.1-0.1,1.7-0.2c-0.2-0.5-0.7-0.4-1-0.2c0.1-0.1,0.2-0.1,0.2-0.2C6.4,27,5.6,28.5,5,29.1 C5.2,28.9,5.7,28.4,5.5,28.8z M77.6,25.8c0.2,0,0.3,0.1,0.5-0.1c-0.3-0.1-0.7-0.1-1.1-0.1C77.2,25.7,77.3,25.7,77.6,25.8z M85.8,27.1c-0.1-0.1-0.2-0.2-0.3-0.2c0,0-0.1,0.1-0.1,0.1C85.6,27.1,85.7,27,85.8,27.1z M28.5,50.6c0,0,0.1,0.3,0.2-0.2 C28.6,50.3,28.5,50.6,28.5,50.6z M7.1,29.7c-0.3-0.1-0.4-0.2-0.7,0C6.6,29.8,6.8,29.7,7.1,29.7z M9.2,31.6c-0.3,0.1-0.5,0.1-0.5,0.5 c0.2-0.1,0.5-0.2,0.7-0.3C9.3,31.5,9.3,31.7,9.2,31.6z M6.4,30.8c0.2,0,0.3,0.3,0.4,0C6.7,30.7,6.5,30.8,6.4,30.8z'>\n            <animateTransform attributeName='transform' type='translate' calcMode='linear'\n            values='-100 0;0 0' keyTimes='0;1' dur='2s' begin='0s' repeatCount='indefinite'\n            />\n        </path>\n        <path transform='translate(39.13)' d='M64.4,74.4c0.3,0.3,0.2,0.3-0.3,0.3C64.1,74.3,64.2,74.5,64.4,74.4z M31.4,75.4c-0.2,0.1-0.3-0.2-0.5,0.1c0.3,0.2,0.6,0.1,0.8-0.1C31.6,75.2,31.6,75.4,31.4,75.4z M84.9,36.9c-0.3,0.2-0.8-0.1-1.1-0.5 c0.1,0.2,0.1,0.6,0.3,0.9c-0.5,0.2-0.2,0.6,0.2,0.7c0-0.1,0-0.3,0-0.4c0.2,0.1,0.4,0.2,0.5,0.3c0.2-0.2,0.2-0.3,0.4-0.5 C85.1,37.2,85,37,84.9,36.9z M85.1,40.6c0-0.6-0.1-2.1-0.6-2.4c-0.6-0.4,0.5,2.1-0.6,1.6c0,0.2-0.1,0.5,0,0.7 c-0.8-0.3-0.9,0.5-1.4,0.9c0.3,0.3,0.4,0.6,0.6,0.9c0.3-0.4,0.2-0.9-0.3-1.2c0.2,0,0.4-0.2,0.6-0.2c0.2,0,0.6,0.2,0.6,0.2 C84.2,41,84.5,40.7,85.1,40.6z M83.7,41c-0.4-0.1-0.7,0.2-0.3,0.6c0.2-0.4,0-0.1,0.3-0.2C83.8,41.2,83.6,41.1,83.7,41z M93.5,62.8 c0.1,0.5,0.3,0.9,0.7,0.8C94.1,63.3,93.8,63,93.5,62.8z M93,71.2c-0.1-0.1-2.5,1.6-2.9,2.1c0.8,0.5,2.9-1.2,3.1-2.1 C93,71.5,92.9,71.2,93,71.2z M95,69.9c-0.4,0.2-0.6,0-0.5-0.4c0,0.1-0.1,0.2-0.1,0.3c0.1-0.5,0.1-0.8-0.1-1.1 c-0.3,0.7,0.1,1.4-0.7,2c0.3,0.3,0.3,0.4-0.1,0.7c0.1,0,0.1,0.1,0.1,0.2C93.9,71.3,95,70.2,95,69.9z M82,50.6 c0.2-0.2,0.3-0.2,0.3-0.5c-0.1,0-0.3-0.1-0.4-0.1C81.9,50.2,81.9,50.4,82,50.6z M82.4,50.6c-0.3-0.4-0.2,0.1-0.1,0.5 c0.2-0.3,0.3-0.5,0.2-0.9C82.5,50.4,82.4,50.5,82.4,50.6z M82.8,49.7c-0.1,0-0.2,0-0.3,0c0,0.1,0.2,0.4,0.2,0.5c-0.1,0-0.1,0-0.2,0 c0.1,0.2,0.1,0.3,0.2,0.5c0.1-0.2,0.1-0.2,0-0.5c0.1,0,0.2,0.1,0.2,0.1C83,50.1,82.9,49.9,82.8,49.7z M81,51 c0.2-0.3,0.3-0.4,0.2-0.8c-0.1,0.5-0.4,0.8-0.6,1.2C80.8,51.3,80.9,51.1,81,51z M81.2,48.6c0.1,0.2,0.1,0.5,0.3,0.3 c0,0.4,0.3,0.6,0.6,0.6c0,0,0-0.1,0.1-0.1c0.1,0.2,0.2,0.3,0.4,0.4c0-0.7-0.6-0.5-0.8-1c-0.2-0.4,0.2-0.9,0-1.4 c-0.5-0.1-0.6,0.3-0.4,1c0,0-0.1-0.1-0.1-0.1C81.1,48.3,81.1,48.4,81.2,48.6z M83.3,52.2c0.1-0.5,0.1-1.1-0.3-1.4c0,0.1,0,0.2,0,0.3 c-0.4,0.2-0.9,0.1-0.9,0.8c0.7-0.7,0.4,0.2,1,0.5c0-0.2,0.1-0.5,0.1-0.7C83.2,52,83.3,52.1,83.3,52.2z M81.5,49.6 c0.1-0.1,0.3-0.1-0.2-0.3C81.4,49.4,81.5,49.5,81.5,49.6z M91.8,57.4c0.1,0.1,0,0.2,0.2,0.1c-0.1-0.2-0.2-0.5-0.3-0.7 C91.6,57,91.7,57.1,91.8,57.4z M90.2,57.3c0.4-0.1,1.1-0.5,0.6-0.9c-0.1,0.4-0.2,0.6-0.4,0.3c-0.1,0-0.5,0.2-0.5,0.3 C89.9,57.2,90,57.2,90.2,57.3z M90.9,56.1c0.1,0.2,0.2,0.3,0.2,0.5c0.1-0.5-0.2-0.8-0.6-0.8C90.7,55.9,90.8,56,90.9,56.1z M90.3,59 c-0.2-0.4-0.7-0.7-1-1.6c0.1,0,0.2,0,0.3,0c-0.7-0.7-1.4-1.7-2.5-1.8c-0.5-0.1-1,0.5-1.3,0.3c-0.5-0.2-0.1-1.4-1.2-0.8 c0.3,0.4,0.6,0.5,0.9,0.6c-0.2,0-0.3,0.1-0.5,0.1c0.1,0.2,0.2,0.4,0.3,0.5c0.1,0,0.2-0.2,0.2-0.2c0.6,0.5,2,1,1,2 c0.6-0.3,0.7,0.4,1.2,0.3c0.4-0.1,0.4-0.5,0.6-0.5C89.2,57.9,89.5,58.9,90.3,59z M93.2,58.5c-0.1,0.1-0.2-0.2-0.2,0.1 C93.3,58.8,93.2,58.6,93.2,58.5z M92.4,57.7c0,0-0.1-0.2-0.2-0.3C92.2,57.6,92.3,57.6,92.4,57.7z M92.9,58c0.1,0.1,0.1,0.1,0.2,0.2 c-0.2-0.2-0.3-0.3-0.5-0.4C92.7,57.8,92.8,57.9,92.9,58z M93.5,59.1C93.6,58.9,93.6,58.8,93.5,59.1z M93.5,58.7c0-0.2,0-0.4-0.2-0.6 C93.3,58.3,93.4,58.5,93.5,58.7z M81,45.9c0.1-0.5,0.2-1-0.1-1.3C80.6,45,80.6,45.5,81,45.9z M94.8,61c0,0,0.1-0.2,0-0.4 C94.7,60.8,94.8,61.1,94.8,61z M94.8,61.2c0.1,0.1,0,0.3,0.2,0.1C94.9,61.1,94.8,61.2,94.8,61.2z M29.5,76.3 c-0.4-0.8-0.5-0.2-0.7-0.2c0.2,0-0.3,0.2-0.3,0.2c-0.2,0-0.6-0.3-0.9-0.4c0.9,0.9,1.9,1.2,2.6,0.7C30,76.6,29.8,76.4,29.5,76.3z M89.6,64.4c0-0.2-0.2-0.3-0.1-0.7c-0.2,0-0.1-0.1-0.3,0c0.1-0.8-0.5-1.1-0.7-1.7c-0.1-0.5,0-1-0.2-1.6c-0.1,0.1-0.1,0.1-0.2,0.2 c0-0.5-0.1-1.1-0.2-1.6c-0.5,0.9-0.5,3.8-1.7,2.2c-0.3-0.5-0.4-0.2-0.4-0.8c0-0.3,0.4-0.5,0.4-0.7c0-0.1-1.1-0.4-1.4-0.5 c0.3,0.3-0.7,0.7-0.8,1.5c-0.5-0.2-0.7-0.4-1.1-0.2c-0.4,0.1-0.7,0.9-0.7,1.1c0,0-0.1,0.1-0.1,0.1c0-0.1,0-0.2-0.1-0.3 c-0.4,0.8-0.6,1.1-1.3,1.4c-0.6,0.3-1.1,0.4-1.6,1c0-0.1,0-0.2,0-0.3c-0.3,0.6-0.5,1.1-0.3,1.8c-0.1-0.1-0.1-0.2-0.2-0.3 c0,0.1,0,0.3,0,0.4c0-0.1-0.1-0.1-0.1-0.2c0.1,1,0.1,1.7,0,2.7c0,0.4-0.6,0.5,0,0.9c0.4,0.2,0.7-0.3,1-0.4c0.8-0.2,1.4-0.5,2.3-0.7 c1.4-0.5,1.7-0.2,2.1,1.1c0.2-0.3,0.5-0.6,0.8-0.8c-0.1,0.4-0.3,0.7-0.6,1c0.2-0.1,0.3-0.2,0.5-0.4c-0.1,0.2-0.1,0.3-0.2,0.5 c0.5,0.2,0.5,2.1,1.5,0.9c0,0.1-0.1,0.1-0.1,0.2C86.9,71.3,90.8,66.1,89.6,64.4z M85.9,71.3c-0.4-0.2-1,0.2-0.7,0.8 c0.2,0.6,0.9-0.4,1.1-0.9C86.2,71.2,86.1,71.2,85.9,71.3z M24.6,44.3c0-0.2,0.2-0.3-0.1-0.5C24.5,44,24.6,44.2,24.6,44.3z M24.2,44.9c0.1,0.1,0.1,0.2,0.1,0.4c0.1-0.2,0.1-0.3,0-0.6C24.1,44.6,24.3,44.8,24.2,44.9z M24.4,43.9c-0.2,0-0.3-0.1-0.3,0.2 C24.3,44.1,24.4,43.9,24.4,43.9z M36.2,56.9c-1-0.3-1.6-1.5-2.7-1.1c0-0.7-0.8-0.9-1.2-0.6c0-0.4-0.4-0.5-0.5-0.8 c-0.1-0.1-0.1-0.7-0.2-1c-0.3-0.7-0.6-0.8-1.2-1.1c-0.6-0.3-0.6-0.2-1.1-0.8c-0.3-0.4-0.6-0.7-1-1c0.1,0,0.2-0.1,0.3-0.1 c-0.9-0.2-1.7,0.6-2.3-0.6c-0.4,0.3-0.4,0.8-0.6,1.2c0-0.3,0-0.7,0-0.9c0.4-0.6-0.1-0.2-0.5,0.1c-0.3,0.2-0.7,0.9-1,1 c0,0-1.6-0.3-1.6-0.3c-0.8-0.7,0.1-1.4-0.1-2.2c-0.2-0.8-1.1-0.3-1.6-0.5c0.2-0.3,0.3-0.7,0.3-1.1c0.1,0,0.1,0,0.1,0.1 c0.2-1.2,0.5-1.7-0.7-0.8c-0.6,0.5-1.3,1.5-1.8,0c-0.3-0.8,0-2.4,0.4-3.1c0.7-1.1,1.6-0.5,2.3-0.6c-0.1-0.7,1.4-0.4,1.6-0.3 c0.2,0.3,0.2,2.8,0.8,1.6c0.5-1-0.4-1.7,0.5-2.7c0.6-0.7,2-1.1,1.3-2.2c0.1,0,0.1,0,0.2,0.1c0-0.2,0-0.3,0.1-0.4 c0,0.4,0,0.4-0.1,0.8c0.3-0.4,0.3-0.4,0.3-0.9c0.1,0.1,0.1,0.1,0.1,0.2c0.2-0.3,0.4-0.5,0.4-0.7c0,0,0.4-0.1,0.6-0.1 c-0.1,0-0.3,0-0.5,0c0.4-0.2,0.8-0.2,1.1-0.4c-0.1,0,0,0-0.2,0c-0.1-0.9,1.4-1.5,1.9-1.4c-0.5,0.2-0.4,0.3-0.6,0.7 c0.5-0.1,1.4-0.5,1.9-0.9c0-0.1-0.1-0.3-0.1-0.4c-0.6,1.2-1.7-0.1-0.8-0.7c-0.7-0.6-1.3,0.5-2,0.8c0.5-0.5,1.1-1.2,1.7-1.3 c0.8-0.2,1.5,0.2,2.2-0.4c1.2-0.9,0.1-1.1-0.6-1.9c0.2-0.5-0.1-0.9-0.2-1.5c-0.5,0.5-1.8,1-1.1-0.3c-0.5,0-0.6-0.4-1.2-0.4 c-1,0-0.4,0.7-1.2,1.3c0.6,0.8-0.3,1.4-0.9,1.5c0.6,1.6-1.5,1.4-0.5-0.2c-0.8,0-1.4-1-2.2-0.7c0-0.6,0.1-0.4-0.3-0.7 c0.5-1.3,2.5-2.2,3.5-2.7c0.3-0.1,1.4-0.2,1.3-0.9c-0.2-1-1.3,0.4-1.7,0.6c0.1-0.2,0-0.2,0.1-0.5c-0.2,0-0.2-0.2-0.6,0 c0.1-0.1,0.1-0.2,0.2-0.3c-0.1,0-0.2,0-0.4-0.1c0.7-0.6-0.4-1-0.8-0.1c0.5,0.5-0.1,0.7-0.5,1c0.1-0.1,0.1-0.2,0.2-0.3 c-0.5-0.2-1,0.1-1.6,0c-0.4-0.1-0.7-0.4-1.2-0.1c0,0,0.1,0.1,0.1,0.1c-0.4,0.1-1.1,0.1-1.7,0c0.1-0.1,0.3-0.1,0.4-0.2 c-0.6-0.3-1.5-0.7-2.1-0.3c0.1-0.1,0.1-0.2,0.2-0.3c-0.4,0.3-0.9,0-1.4,0c-0.6,0.1-1.2,0.4-1.8,0.4c-0.6,0-2.5-0.4-2.7-0.6 c-1.3-0.2-2.7,0.3-4,0.8c0.3,0.2,0.3,0.4,0.4,0.8c-0.2,0-0.3,0-0.5,0c0.1-0.1,0.1-0.1,0.2-0.2c-0.4,0-0.9,0.2-1.3,0.3 c0.2,0.7,0.9,0.5,1.4,0.3c-0.3,0.5-0.9,0.4-1.5,0.6c-0.5,0.2-1.4,1.3-0.4,1.1c-0.1,0.1-0.1,0.3-0.3,0.5c0.2-0.1,0.3-0.1,0.5-0.1 c0,0.1,0,0.1-0.1,0.2c0.1,0,0.1-0.1,0.2-0.1c0,0.1,0,0.1,0,0.2c0.2-0.1,0.4-0.1,0.6-0.2c-1,0.9-2.2,1-3.2,1.7 c2.1-0.4,3.5-1.8,5.4-2.6c-0.3,0.1-0.7,0.4-0.8,0.8c0.8-0.2,1.2-0.4,1.9-0.4c0.8,0.1,1.3,0.9,2.1,0.8c-0.1,0.6-0.1,1.8,0.3,2.2 c-0.6,0.8,1.3,1,0.4,2c-0.2-1.2-0.9,1-1.2,1.6c-0.4,0.8-0.5,2-0.2,2.8c0.2,0.4,1.7,3,0.9,3.3c0.6,0.7,0.6,1.2,1,2 c0.6-0.7-1.1-2.5-0.6-3.6c0.4,0.2,0.8,1.8,1,2.3c0.2,0.4,0.6,1.1,0.8,1.6c0.1,0.7-0.2,0.6,0.2,1.3c0.2,0.4,0.9,0.7,1.3,0.9 c0.5,0.3,1,0.1,1.3,0.2c0.8,0.3,1.4,1.1,2.1,1.3c0,0-0.1,0-0.1,0c0.4,0.5,0.5,0.9,0.7,1.3c0.1-0.1,0.1-0.1,0.1-0.2 c0.4,0.6,0.9,1.2,1.4,1c-0.1-0.8,0.3-0.4,0.5-0.1c0.3,0.5,0.3,1.3,0.2,1.7c-0.2,0.7-1.6,1.6-0.9,2.5c0-0.1,0.1-0.1,0.1-0.2 c0,0.6-0.4,0.8-0.3,1.5c0.1,0.3,0.7,1.2,0.9,1.6c0.3,0.7,0.5,1.6,1,2.1c0.5,0.6,1.3,0.7,1.6,1.4c0.3,0.7,0.2,2,0.2,2.8 c0,1,0.2,1.8,0.2,2.7c0.1,1.2-0.5,3.5,0.3,4.4c0-0.2,0-0.3,0-0.5c0.3,0.3,0.2,0.4,0.3,0.9c-0.1,0-0.2-0.1-0.3-0.1c0,0.5,0,0.6-0.1,1 c0.1,0,0.3,0.1,0.4,0.1c-0.8,1.1,0.7,2.6,1.6,2.7c-0.1-0.5,0.1-0.6,0.6-0.6c-0.6-0.4-0.2-0.6-0.2-1c0-0.2,0.3-0.7,0.3-0.7 c0-0.2-0.3-0.5-0.3-0.4c0-0.1-0.3-0.3-0.3-0.6c0-0.2,0.4-0.2,0.4-0.2c0.1-0.5-0.2-0.7,0.3-1c0-0.1-0.1-0.1-0.1-0.2 c-0.8,0,0-0.5,0-0.4c0.1-0.3,0.5-0.3,0.1-0.9c1.8,0.4,1.2-1.1,0.8-2c1,0.9,1.4,0,1.9-1c0.6-1.3,0.3-2.4,1.5-3.2 c0.7-0.5,0.7-0.1,1.1-1c0.3-0.8,0.3-1.4,0.4-2.2C35.4,59.7,36.6,58.3,36.2,56.9z M24.2,26.2c-0.2,0-0.3-0.1-0.5,0 C23.9,26.6,23.9,26.3,24.2,26.2z M22.4,25.3c-0.2,0.1-0.4,0.2-0.5,0.3c0.4,0.1,0.8,0,1.2,0c-0.2,0-0.4,0.2-0.6,0.2 c0.5,0,1.7,0,2-0.5c-0.2,0-0.3,0-0.4,0c0-0.1,0-0.2,0.1-0.3c-0.4,0.1-0.3-0.1-0.4,0.4C23.3,25.5,22.8,25.2,22.4,25.3z M24.2,27.3 c-0.5-0.1-0.6-1.9-1.2-0.5c0-0.6-0.7-0.4-1.2-0.3c0.1-0.1,0.1-0.1,0.2-0.2c-0.5-0.1-1.1,0.2-1.5,0.5c0.2,0,0.4,0.1,0.7,0.1 c-0.2,0-0.4,0.1-0.6,0.1c0.3,0.2,0.8,0.1,1.2,0.2c-0.4,0-0.8,0.1-1.2,0.1C21.2,28.1,23.6,27.9,24.2,27.3z M24,24.9 c0-0.3-0.3-0.1-0.7,0C23.6,25,23.8,24.9,24,24.9z M21.6,25.4c0.4-0.1,0.9-0.1,1.2-0.5c-0.6,0-1.2,0.2-1.8,0.5 C21.2,25.4,21.4,25.4,21.6,25.4z M32.4,34.8c-0.1,0-0.2,0.2-0.3,0c0,0,0.1-0.1,0.1-0.1c-0.1,0-0.3,0-0.4,0c0.2-0.2,0.3-0.5,0.5-0.7 c-0.6,0.1-1.2,1.1-1.3,1.6c0.3,0,0.7,0,1,0.1c-0.1,0.1-0.1,0.1-0.2,0.2c0.1-0.1,0.4-0.2,0.5-0.3c0,0.1,0,0.2-0.1,0.4 c0.4,0,0.5-0.3,0.4-0.7c-0.1,0-0.1,0-0.2,0.1c0-0.1,0.1-0.2,0.1-0.3C32.6,34.9,32.5,34.9,32.4,34.8z M14,35c0.7,0.6,0.5-0.1,0.2-0.5 C13.7,34.1,13.5,34.6,14,35z M19.6,27.1c0.8-0.1,1.5-0.7,2.3-0.8c-0.9-0.9-1.9,0-2.6,0.5C19.5,26.8,19.5,27,19.6,27.1z M27.7,29.4 c-0.8-0.6-0.7-0.5-1.6,0.2c0.1,0,0.4,0.2,0.3,0.2C27,29.4,27.6,29.7,27.7,29.4z M13.3,33.1c-0.2,0.2-0.3,0.4,0,0.7 c0.1-0.2,0.2-0.5,0.3-0.7C13.4,33.1,13.4,33.1,13.3,33.1z M27.5,30.1c0.1,0,0.1,0.3,0.2-0.1C27.6,30,27.6,30.1,27.5,30.1z M29.8,36 c-0.1,0,0-0.3-0.2-0.1c0.3,0.2,0.2,0.2,0.6,0.1C30.1,36.1,29.9,36.1,29.8,36z M26.7,30c0.2,0,0.3,0.1,0.6-0.2 C27,29.8,26.9,29.9,26.7,30z M30.5,35c-0.2-0.2-0.3-0.3-0.6-0.3C30.1,34.9,30.3,34.9,30.5,35z M27,25.3c0,0.2,0.1,0.2,0,0.5 c0.7,0.2,2.2,0.4,2.7-0.2c-0.7-0.3-1.4,0.1-2.1-0.2c0,0,0.1-0.1,0.1-0.1c-0.4-0.2-0.8-0.3-1.3-0.1C26.7,25.3,26.8,25.3,27,25.3z M26.8,24.9c0.2,0,0.3,0,0.5,0C27.2,24.8,26.9,24.9,26.8,24.9z M27.5,24.4c0.1,0,0.2,0,0.4,0c-0.1,0.1-0.2,0.1-0.3,0.2 c0.6,0.4,1.2,0,1.8-0.2c-0.5-0.6-1.3-0.6-2-0.2C27.3,24.4,27.4,24.2,27.5,24.4z M26.3,25.8c0.2,0,0.3,0.1,0.5-0.1 C26.6,25.6,26.1,25.4,26.3,25.8z M27,24.8c-0.1-0.2-0.1-0.3-0.5,0C26.8,24.9,26.8,24.7,27,24.8z M29.7,26.4c0.1,0,0.3,0,0.5,0 c-0.2-0.3-0.6-0.4-0.9-0.2C29.4,26.5,29.4,26.4,29.7,26.4z M26.9,26c-0.5-0.1-0.9,0.1-1,0.7c0.5-0.1,1-0.3,1.4-0.6 C27.1,26.1,27,26,26.9,26z M31.5,27.3c-0.4-0.3-0.7-0.5-1.2-0.4c-0.2-0.6-0.9-0.4-1.3-0.2c0.3-0.8-0.6-0.5-1-0.2 c0-0.1,0-0.1-0.1-0.2c0.1-0.1,0.2-0.1,0.3-0.2c-0.6,0-1.1,0.2-1.4,0.8c0.1,0,0.2,0,0.3,0C27.1,27,27,27,26.9,27.1 c0.6,0.3,2.7,0.1,2.5,0.6c0.8,0.1,0.7,0.4,0.2,0.9c-0.3,0.3-0.9,0.1-1.3,0.6c0.5,0.2,0.9-0.2,1.4,0.3c0,0-0.1,0.1-0.1,0.1 c0.4,0.3,0.8,0.5,1.2,0.5c-0.1-0.2-0.2-0.5-0.4-0.7c1.4,1.5,0.5-0.9,0.4-0.7c0.3-0.6,0.9,0.8,1.6-0.4c-0.5-0.1-0.8-0.5-1.3-0.6 c0.2-0.1,0.3-0.1,0.5-0.2C31.6,27.5,31.5,27.4,31.5,27.3z M25.7,24.7c0.2,0.1,0.4,0.1,0.6,0.1c-0.1-0.4-0.5-0.5-0.9-0.3 c0.1,0,0.1,0,0.2,0.1c-0.1,0-0.2,0.1-0.3,0.1C25.4,24.7,25.5,24.7,25.7,24.7z M29,24c0.5,0.1,0.9,0.1,1.4,0.1 c-0.3,0.1-0.7,0.1-1,0.1c0.1,0.2,0,0.1,0.2,0.3c-0.2,0.1-0.5,0.2-0.8,0.3c0.2,0.1,0.3,0.2,0.4,0.3c-0.4-0.2-0.8,0-1.1,0.3 c0.7,0.1,1.9,0.3,2.5-0.2c-0.1,0-0.2,0-0.4,0c0.4-0.3,1-0.4,1.2-0.7c-0.1,0-0.2,0-0.3,0c0.9,0,1.8-0.4,2.7-0.6c-0.1,0-0.3,0-0.4,0 c0.4-0.1,0.9-0.1,1.3-0.3c-1.6-0.4-4.4-0.4-5.9,0.3C28.9,23.8,28.9,23.9,29,24z M29.5,28.2c-0.2-0.3-0.3-0.3-0.5,0.2 C29.3,28.4,29.4,28.3,29.5,28.2z M24.4,24.6c-0.2,0-0.4-0.1-0.6,0.1C24,24.7,24.2,24.6,24.4,24.6z M25,27.4c-0.2,0-0.4,0-0.7,0.2 c0.3,0.2,0.6,0.2,0.9,0.1C25.2,27.4,25.1,27.5,25,27.4z M24.4,26.5c0.4,0.5,0.9,0.5,1.3,0c-0.1,0-0.2-0.1-0.2-0.1 c0.2-0.1,0.2-0.1,0.3-0.3c-0.4,0-0.9-0.1-0.9,0.3C24.7,26.4,24.6,26.5,24.4,26.5z M25.3,25.7c0.4,0.2,0.9-0.1,0.9-0.5 c-0.4,0-0.8,0-1.1,0.4C25.5,25.4,25.3,25.7,25.3,25.7z M78.1,46.7c-0.7,0.3-0.2,0.9,0,0.7C78.4,47,78.4,46.8,78.1,46.7z M24.7,46.8 c0.2,0,0.3,0,0.4-0.2c-0.8-0.5-2-1.9-3-0.7c0.3-0.1,0.6-0.2,0.9-0.3c0,0-0.1,0.1-0.1,0.1c0.6,0.3,1,0.3,1.4,0.8 c-0.1,0.1-0.1,0.2-0.2,0.2C24.3,46.7,24.5,46.8,24.7,46.8z M55.7,40.5c-0.1,0.1-0.2,0.1-0.4,0.1c0.4,0.2,0.3,0.1,0.6-0.2 C55.9,40.4,55.8,40.4,55.7,40.5z M49.5,32.8c0.1-0.4,0.2-0.6-0.3-0.4C49.2,32.7,49.3,32.7,49.5,32.8z M48.9,38.1 c0-0.3,0.1-0.4,0-0.7C48.6,37.7,48.8,37.8,48.9,38.1z M45.1,32.6c0.1-0.1,0.1-0.3,0.2-0.1c0,0.1,0.4,0.4,0.4,0.6 c0,0.4-0.6-0.1-0.3,0.6c-0.1,0-0.2,0.1-0.3,0.1c0.1,0,0.3,0.2,0.5,0.2c-0.2,0.1-0.4,0.3-0.6,0.5c0.7,0,1.9,0,1.9-1 c-0.6-0.2-0.6-1-1.2-1.2c0.2-0.2,0.2-0.5,0.3-0.6c-0.2,0-0.3,0-0.5,0c0.1-0.1,0.2-0.3,0.3-0.4C45,31.2,44.9,32,45.1,32.6z M53.3,40.5c-0.2,0-0.2,0.1-0.4-0.1c0,0.1,0,0.1,0,0.2c0.3,0.1,0.5,0.2,0.8,0C53.5,40.5,53.5,40.5,53.3,40.5z M41.5,27.3 c-0.3,0-0.6,0-0.9,0c0-0.1,0.2-0.4,0.2-0.4c0.3,0.3,0.4,0.3,0.8,0.3c-0.2-0.3-0.2-0.4-0.6-0.6c0.1,0,0.3,0,0.5,0 c-0.1-0.1,0-0.2-0.2-0.4c0.3,0,0.5-0.1,0.7-0.2C42,26,42,26,41.9,26c0.2,0,0.3,0,0.5,0c-0.1-0.1-0.2-0.2-0.2-0.3 c0.3-0.2,0.3-0.2-0.1-0.5c0.2,0,0.5-0.1,0.7-0.1c-0.3-0.4-0.2-0.7,0.3-0.9c-0.2,0-0.3,0-0.5,0c0.5,0,1-0.2,1.6-0.3 c-0.6-0.3-1.5-0.1-2.1,0c0.1-0.1,0.2-0.1,0.2-0.2c-0.6-0.1-1.3-0.1-1.9-0.1c0.7,0,1.5,0.1,2.2-0.1c-1.4-0.2-3.8-0.7-5,0.1 c0.1,0,0.3,0.1,0.4,0.1c-1.6-0.3-3.3-0.2-4.8,0.4c0.2,0,0.3,0.1,0.5,0.1c-0.6,0.3-1.4,0.1-1.9,0.5c0.4,0.1,0.8,0.2,1.2,0.2 c-0.3,0-0.7,0-1,0.1c0.2,0.2,4.1,0.7,2.5,1.7c0.3,0.1,0.5,0.2,0.8,0.4c-0.9-0.5-1,0.9,0,0.2c-0.6,1-1.2,0.7-0.8,2.1 c0.2,0.7,0.5,0.9,0.9,1.1c0.7,0.4,0.6,0.2,1.1-0.4c0.1-0.1,0.4-0.9,0.6-1.1c0.4-0.3,0.8-0.2,1.1-0.4C39.3,28.2,40.4,27.9,41.5,27.3z M25.3,47.4c0.3,0.1,0.4-0.1,0.6,0.3c0.2-0.4,0.6-0.3,0.9-0.4c-0.3-0.4-0.9-0.7-1.4-0.4c0.2,0.2,0.1,0.2,0.3,0.4 c-0.2,0-0.3,0.1-0.6,0C25,47.6,25.1,47.4,25.3,47.4z M80.8,58.3c0.1,0,0.2-0.1,0.3-0.1C81,58,80.7,58,80.5,58.4 C80.6,58.4,80.7,58.3,80.8,58.3z M82.5,56.6c-0.2-0.4-0.3-0.7-0.5-1.1c0.2-0.1,0.3-0.3,0.5-0.3c0-0.1,0-0.1,0-0.2 c-0.4,0.2-1.4,0.1-0.8-0.4c0.5-0.4,1.2,0.5,1.3-0.5c-0.4,0.6-0.9,0-1.3,0.2c-0.3,0.2-0.5,1.1-0.5,1.5c0,0,0.3,1.2,0.2,1.2 c0.4,0.2,0.2-0.9,0.4-1.2c0,0.4,0.1,0.6,0.2,0.9c0.1-0.1,0.2-0.1,0.3-0.2c-0.1,0.3,0,0.3,0,0.5C82.5,56.9,82.4,56.8,82.5,56.6z M78.5,55.3c0.1,0.8,1.5,1.1,1.9,1.1c0.1-0.7,0.3-1.8,0.9-2c-0.6-0.8-0.4-1.3,0-1.8c-0.4-0.2-0.5-0.6-0.8-0.5 c-0.3,0.1-0.6,0.9-0.8,1.1C79.1,53.9,77.9,54,78.5,55.3z M85.8,57.1c-0.1,0.1-0.2,0-0.2,0.5C85.8,57.4,85.7,57.2,85.8,57.1z M83.6,56c-0.1,0-0.2,0-0.3,0C83.6,56.5,83.5,56.1,83.6,56z M81.6,58.9c-0.1-0.2-0.1-0.4-0.5-0.3C81.3,58.8,81.4,58.8,81.6,58.9z M82.3,58.2c-0.1-0.2-0.5-0.1-0.8,0.1C81.7,58.4,82,58.3,82.3,58.2z M78.7,58c0.5,0.1,1,0.2,1.5,0.1c-0.6-0.3-2.6-1.5-3-0.6 C77.7,57.7,78.2,57.8,78.7,58z M77.4,56.5c0.3-1-2-4.1-3.1-3.9c0.4,0.9,1,1.6,1.5,2.5C76,55.4,77.5,58.3,77.4,56.5z M84.2,56.1 c0.2,0.1,0.3,0,0.5,0.2c-0.2-0.5-0.6-0.6-0.9-0.2C84,56.1,84.1,56.1,84.2,56.1z M83.9,55.1c0.1-0.4,0.3-0.8-0.1-1.2 C83.7,54.3,83.7,54.7,83.9,55.1z M82.7,58.8c0.2-0.3,0.6-0.5,0.9-0.7c-0.5,0-1,0.2-1.2,0.8C82.5,58.9,82.6,58.9,82.7,58.8z M44.1,33.6c-0.1,0.1-0.1,0.3-0.2,0.4c0.4,0.1,1.4-0.5,1.1-1C44.7,32.3,44,33,44.1,33.6z M41.8,29.6c0.5,0.1,1.1-0.1,1.5-0.5 c0-0.1-0.2-0.4-0.2-0.5c-0.6,0.1-1.9-0.2-2.3,0.3c0.2,0,0.3,0.1,0.5,0.1c-0.1,0-0.2,0.1-0.4,0.2c0.2,0.1,0.3,0.1,0.5,0.2 c-0.1,0.1-0.2,0.1-0.2,0.2C41.4,29.5,41.6,29.5,41.8,29.6z M48.7,38.5C48.8,40.2,49,37.2,48.7,38.5z M50.5,39.4 c-0.2,0-0.4,0.1-0.6,0c0.1,0.3,0.4,0.5,0.7,0.6C50.7,39.5,50.6,39.5,50.5,39.4z M24.1,47.3c-0.1,0.1-0.2-0.1-0.2,0.1 c0.3,0.2,0.3,0.2,0.6,0.1C24.4,47.3,24.3,47.4,24.1,47.3z M70,51c-0.1-0.1-0.1-0.1-0.2-0.2C69.3,52.7,70.9,52.3,70,51z M61,60.2 c0-0.2-0.1-0.4-0.2-0.6c-0.1,0.3-0.3,0.5-0.4,0.7c-0.1,0.8-0.9,0.8-1.1,1.4c-0.2,0.4,0.1,0.7,0,1.1c-0.1,0.4-0.3,0.6-0.4,1 c-0.1,1.2,0.5,1.5,1.1,0.7c0.5-0.7,0.9-2.6,0.9-3.5c0,0.1,0.1,0.2,0.1,0.2C61.1,60.9,61,60.6,61,60.2z M74.3,48.1 c-0.9,0.8-1-2.4-2-2.6c0,0.2,0,0.2,0,0.4c-0.3-0.1-0.5,0-0.9,0.1c0.1,0.9-1.3,1.5-1.5,2.2c-0.2,0.6-0.2,2.1-0.3,2.7 c-0.1,0.1-0.3,0.4-0.5,0.5c-1-1.2-1.5-3.8-1.8-5.4c-0.6,0.6-1.1-0.6-1.6-1c-0.5-0.5-0.4-0.4-1.1-0.5c-0.5-0.1-0.9,0.1-1.3-0.1 c-0.4-0.2-0.5-0.6-0.8-0.7c-0.3-0.1-0.5,0.2-1,0c-0.7-0.3-0.8-1.5-1.5-1.1c0.1,0.9,0.8,1.3,1,2.1c0-0.2,0.1-0.4,0.1-0.5 c0.1,1.3,1,0.8,1.4-0.1c-0.1,0.9,0.5,0.7,0.8,1.1c0.4,0.8,0.2,0.6-0.1,1.2c-0.4,1-0.6,1.2-1.5,1.7c-0.6,0.4-2,1.9-2.6,1.1 c-0.3-0.4-0.1-0.9-0.2-1.3c-0.2-0.5-0.7-1-0.9-1.4c-0.4-0.8-1.8-3-1.6-3.7c0,0.3-0.2,0.5-0.2,0.7c-0.2-0.3-0.4-0.5-0.5-0.9 c0.1,0.8,0.6,1.5,0.9,2.2c0.3,0.7,0.4,1.4,0.7,2.1c0.3,0.7,2,2.5,1.7,3c0.5,0.9,1.8,0.2,2.4-0.1c0.1,3.4-3.7,4.9-3.4,7.8 c0.1,1.4,0.7,2.7-0.3,3.9c-0.7,0.8-1,0.7-1.1,1.7c0,0.5,0.2,0.8-0.1,1.3c-0.1,0.2-0.6,0.3-0.7,0.5c0,0.1,0,0.5-0.1,0.7 c-0.2,0.5-0.5,1.1-0.9,1.5c-0.5,0.6-0.9,0.8-1.4,1c-0.2,0.1-1.4,0.4-1.5,0.4c-0.6-0.2-0.2-0.7-0.3-1.2c-0.2-0.8-0.6-1.4-0.8-2.2 c-0.2-0.9-0.2-1.6-0.5-2.5c-0.3-0.8-0.5-1.3-0.2-2.2c0.3-1.4,0.5-2.2,0.1-3.5c-0.3-1-0.9-1.5-0.9-2.5c0-0.8,0.3-1.3-0.2-1.9 c-0.9,0.6-1.1-0.8-2.2-0.5c-0.7,0.2-1.9,0.8-2.6,0.6c-1.5-0.3-2.2-3.1-2.8-4.2c0.8-0.8,0.2-2.2,0.4-3c0.1-0.4,0.4-1.2,0.6-1.5 c0.4-0.6,0.9-0.7,1.2-1.3c0.5-0.8,0.3-1.3,1-2c0.8-0.9,0.3-0.3,1.4-0.5c0.9-0.1,2.7-1.4,3.4-0.6c0.1,0,0.2-0.1,0.2-0.1 c-0.2,0.8-0.3,1.2,0.3,1.7c0.5,0.4,1.7,1.1,2.2,0.8c0.1,0,0-0.6,0.5-0.7c0.2-0.1,0.7,0.4,0.9,0.5c0.5,0.2,1.7-0.1,1.9,0.3 c0.9,0.2,1-1.5,1-2.3c-0.6,0-1.4,0.3-1.9,0.1c-1.2-0.5-0.9-1.5,0-1.9c0.4-0.2,1.1-0.3,1.6-0.3c0.4,0,1,0.7,1.4,0.3 c0.6-0.6-0.9-1.3-1.3-1.6c0.3-0.4,0.2-0.2,0.2-0.5c0.1-0.1,0.2-0.1,0.4-0.2c-0.4-0.1-1.6,0.5-0.6,0.6c-0.4,0.4-0.8,0.5-1.1,0.1 c0.1-0.1,0.2-0.1,0.3-0.2c-1-0.9-1.9,1.4-1,1.8c-0.2,0.1-0.5,0.3-0.7,0.5c-0.2-0.4-0.3-0.3-0.7-0.2c0.1,0.1,0.1,0.1,0.2,0.2 c-0.3-0.1-0.2,0.1-0.4-0.1c0,0.5,0.2,0.7,0.4,1.1c-0.1,0-0.2-0.1-0.3-0.1c0.1,0.2,0.1,0.2-0.1,0.2c0,0.1,0.1,0.2,0.1,0.4 C52,40,52,38.4,51.7,37.9c-0.3-0.5-1.4-1.3-1.6-1.2c-0.1-0.2,0-0.2,0-0.3c-1.3,0,1.2,2,1.3,2.3c-0.7-0.5-0.1,0.3-0.7,0.8 c0.3-1-0.8-1.3-1.3-1.8c-0.6-0.6-0.2-0.5-0.9-0.6c-0.5-0.1-1.1,0.5-1.3,0.7c-0.8,0.6-0.7,1.7-1.5,2.2c-0.8,0.5-1.1-0.4-1.8-0.1 c-0.1-0.5-0.2-2.3,0.1-2.6c0.4-0.5,1.5,0.4,1.9-0.1c0.7-0.8-0.5-1.5-0.8-2c0.3,0,0.5-0.1,0.8,0c0-0.1-0.1-0.3-0.1-0.4 c0.5,0.3,0.9-0.3,1.2-0.6c0.3-0.3,0.8-0.7,1-0.9c0.1-0.2,0.3,0.2,0.4-0.1c0,0-0.1-0.3-0.1-0.4c0.2-0.4-0.2-0.8,0.5-1 c0,0.1,0.1,0.4,0.1,0.5c-1.1,0.9,1.1,0.8,1.5,0.7c0.6-0.1,0.7,0.1,1.1-0.3c0.2-0.2-0.2-1.4,0.7-0.6c0-0.2,0-0.3,0-0.5 c-0.2-0.1-0.1-0.1-0.3-0.3c0.5-0.2,0.9,0,1.3-0.3c-0.6-0.4-1.5,0.5-1.9-0.3c-0.4-0.7,0.2-1.2,0.8-1.5c-0.5-0.8-0.9,0.1-1.2,0.5 c-0.7,0.9-0.3,0.8-0.4,1.8c0,0.2-0.6,1.4-0.9,1.3c-0.4-0.1-0.7-1.2-1-1.4c-0.3-0.1-1.5,0.8-1.2-0.8c0.1-0.6,1.1-1,1.6-1.5 c1-1.1,2.6-2.5,4.1-1.6c-0.1,0-0.2,0.1-0.3,0.1c0.4,0.2,2.3,0.3,2.6,0.9c0.4,1-1.2,0.3-1.6,0.4c0.5,0.3,0.5,0.9,1.1,1 c-0.1-0.1-0.1-0.2-0.2-0.3c0.2,0,0.6,0,0.9,0c-0.1-0.1-0.1-0.2-0.2-0.3c0.3-0.3,0.6-0.4,0.9-0.2c0-0.3-0.1-0.6-0.3-0.9 c0.4,0,0.6,0.1,0.8,0.3c-0.1,0-0.2,0-0.3,0c0.4,0.6,1.1-0.3,1.9-0.4c-0.1,0.1-0.1,0.1-0.2,0.2c0.5,0,1.2-0.1,1.6-0.3 c-0.1-0.1-0.2-0.1-0.3-0.2c0.6-0.2,1.5,0.2,2.1,0.5c0-0.1,0.1-0.1,0.1-0.2c-0.7-0.3-1.2-1.5-0.2-1.4c0.5,0,1.4,1.7,1,2.2 c0.4,0,0.5-0.1,0.6-0.5c-0.4-0.4-0.6-0.8-1-1.2c0.1-0.1,0.2-0.1,0.3-0.2c-0.1-0.1-0.1-0.2-0.2-0.2c0.2,0.2,0.4,0.4,0.6,0.6 c-0.1-0.1-0.1-0.2-0.2-0.2c0.4-0.2,0.8-0.2,1.2,0c-0.3-0.2-0.3-0.4-0.5-0.6c0.4-0.1,0.9-0.1,1.3-0.1c-0.1-0.1-0.2-0.1-0.3-0.2 c0.6-0.7,1.8-0.5,2.7-0.6c0.1-0.4,0.5-0.5,0.9-0.3C68.1,25,68,25,67.9,25c0.7,0.2,1.8-0.1,2.3,0.6c-0.2,0.1-0.5,0.3-0.7,0.4 c1.1,0.1,2.1,0.5,3.2,0.4c-0.1-0.1-0.1-0.2-0.2-0.2c1.1,0,1.5,0.7,2.5,1c0-0.1-0.1-0.2-0.1-0.4c0.6,0.2,1.2,0.1,1.8,0.1 c-0.1-0.1-0.3-0.2-0.4-0.3c0.5-0.3,1.7-0.1,2.3,0.1c0.7,0.2,1.4,0.2,2.1,0.4c1.1,0.2,2.5,0.9,3.6,0.7c-0.2-0.1-0.3-0.2-0.5-0.4 c1.8,0.3,2.5,0.3,3.9,1.8c-0.2,0-0.2,0.1-0.5,0.1c0.4,0.2,0.9,0.4,1.2,0.8c-0.6-0.2-1.3,0.2-1.3,0.9c-0.5-0.4-1.1,0-1.6,0 c0,0.9,0.6,0.7,1,1.4c-0.1,0-0.1,0-0.2,0c0.1,0.2,0.2,0.3,0.3,0.5c-0.1,0.1-0.2,0.1-0.3,0.2c0.1,0.1,0.1,0.3,0.2,0.4 c-0.1,0-0.2,0.1-0.3,0.1c0.2,0.4,0,0.4,0,0.7c-0.7-0.7-1.6-1.6-1.8-2.6c0.5-0.2,1-1.7,0.2-1.7c0.2,1-0.4,0.2-0.7,0.3 c-0.4,0.2-1.1,0.3-0.3,0.9c-0.6,0.3-1.3-0.1-2,0c-1.2,0.1-1.2,0.4-1.8,1.7c1.2,0.2,2.2,0.4,2.5,2.1c0.1,0.6,0.1,1.6-0.2,2.1 c-0.4,0.5-0.6,0.3-0.9,0.6c0,0-0.4,0.9-0.4,0.9c0.1,0.5,0.3,0.4,0.6,0.9c1.1,1.9-0.9,1.2-0.5,0.3c-0.2-0.2-0.7-0.8-0.7-0.8 c-0.4-0.2-0.5-0.6-1.1,0c0.4-1.3-0.9-0.4-0.9,0c0,0.9,1.3,0.4,1.6,0.8c-1.4,0.4,0.5,2.1,0.6,2.8c0.2,1.5-0.7,2.5-1.6,3.1 c-0.3,0.2-0.4,0.3-0.8,0.4c-0.1,0,0.1,0.4-0.1,0.4c-0.1,0-0.2-0.3-0.2-0.3c-0.1,0-1-0.5-1,0.7c0,0.8,1.1,1.3,1.3,2.1 c0.2,1.1-0.4,1.4-1,2.1c0-0.5-0.9-1.6-1.4-1.6c0-0.1,0-0.2,0-0.3c-0.1,0-0.2,0-0.3,0c0,0.6-0.1,1.2,0,1.7c0.1,0.4,0.5,0.7,0.7,1.1 c0.4,0.8,0.5,1.3,0.8,2.1c-1.2-0.2-1.1-2-1.8-2.8c0,0.1,0,0.2,0,0.2C75.1,51,75,47.7,74.3,48.1z M53.6,51.4 c-0.1-0.1-0.1-0.1-0.2-0.2C53.5,51.3,53.5,51.4,53.6,51.4z M61.2,39.7c-0.1-0.7-0.4-0.9-0.5-1.5c0.3,0.1,0.3,0,0.5,0 c-0.2-0.4-0.5-0.6-0.5-0.1c-0.1-0.7-0.6-0.8-0.9-1.4c0.1,0,0.2,0,0.3,0c0.2-0.4-0.1-0.3,0.4-0.3c0.1-1-1-0.7-1.3-0.2 C58.7,37,59.4,38,60,38.5C59.1,39.1,60.4,40.4,61.2,39.7z M50.4,24.2c0.4,0.2,1,0.2,1.5-0.1c-0.6-0.2-1.4-0.2-2-0.1 C50.1,24.2,50.2,24.2,50.4,24.2z M51,25c0.1,0,0.3-0.1,0.4-0.1c-0.3-0.1-0.5-0.1-0.8-0.1c0.1,0.3,0.1-0.1,0,0.2 C50.8,24.9,50.9,24.9,51,25z M49.1,24.8c0.1,0,0.2,0.1,0.3,0.1c-0.1,0-0.1,0.1-0.2,0.1c0.7,0.5,0.8-0.4,1.5-0.5 c-0.9-0.3-1.4-0.2-2.2-0.2C48.7,24.5,48.9,24.7,49.1,24.8z M27.1,47.3c0.1,0.1,0,0.4,0.4,0.1C27.4,47.3,27.3,47.3,27.1,47.3z M55.6,24.1c0.3,0.1,0.6,0,0.9-0.1c-0.5,0-0.8,0-1.3,0C55.5,24,55.7,24.2,55.6,24.1z M57.7,26.9c0.4,0.2,0.9,0.4,1.4,0.3 c-2-0.4,1.3-1.7,1.6-1.9c-0.7-0.3-1.8,0.1-2.5,0.5c-0.1,0.2,0,0.1-0.3,0.4c0.1,0,0.1,0,0.2,0C57.7,26.4,57.7,26.6,57.7,26.9z M65.1,24.4c0.5,0.1,1,0.2,1.5,0.2c-0.4-0.6-1.5-0.9-2.1-0.4C64.7,24.1,64.8,24.3,65.1,24.4z M75.7,25.8c0.3-0.1,0.7-0.1,1.1-0.1 c-0.3-0.5-1.3-0.5-1.8-0.4C75.2,25.7,75.4,25.8,75.7,25.8z M67.6,24.6c-0.5-0.2-0.9-0.4-1,0.2C67,24.8,67.5,24.8,67.6,24.6z M76.6,26.1c-0.2,0.1-0.2,0-0.3,0.2c0.3,0.1,0.6,0.1,0.8,0.1C77,26.2,76.8,26.1,76.6,26.1z M5,29.1C5,29.1,5,29.1,5,29.1z M7.7,27 c-0.2-0.1-0.3-0.2-0.6,0.1C7.3,27.1,7.5,27,7.7,27z M82.3,33.9c0.6,0.5,0.9,1.6,1.4,2.3c0-0.1,0-0.2,0-0.3c0.1,0.1,0.2,0.2,0.3,0.2 c-0.3-0.4-0.7-0.7-0.7-1.2c0.2,0,0.3,0.1,0.5,0.1c-0.6-0.6-1.2-1.8-1.8-2C82.1,33.3,82.2,33.4,82.3,33.9z M5.5,28.8 c0,0,0.3,0.1,0.5,0.1c0.1,0.8,1.1-0.1,1.7-0.2c-0.2-0.5-0.7-0.4-1-0.2c0.1-0.1,0.2-0.1,0.2-0.2C6.4,27,5.6,28.5,5,29.1 C5.2,28.9,5.7,28.4,5.5,28.8z M77.6,25.8c0.2,0,0.3,0.1,0.5-0.1c-0.3-0.1-0.7-0.1-1.1-0.1C77.2,25.7,77.3,25.7,77.6,25.8z M85.8,27.1c-0.1-0.1-0.2-0.2-0.3-0.2c0,0-0.1,0.1-0.1,0.1C85.6,27.1,85.7,27,85.8,27.1z M28.5,50.6c0,0,0.1,0.3,0.2-0.2 C28.6,50.3,28.5,50.6,28.5,50.6z M7.1,29.7c-0.3-0.1-0.4-0.2-0.7,0C6.6,29.8,6.8,29.7,7.1,29.7z M9.2,31.6c-0.3,0.1-0.5,0.1-0.5,0.5 c0.2-0.1,0.5-0.2,0.7-0.3C9.3,31.5,9.3,31.7,9.2,31.6z M6.4,30.8c0.2,0,0.3,0.3,0.4,0C6.7,30.7,6.5,30.8,6.4,30.8z'>\n            <animateTransform attributeName='transform' type='translate' calcMode='linear'\n            values='0 0;100 0' keyTimes='0;1' dur='2s' begin='0s' repeatCount='indefinite'\n            />\n        </path>\n    </g>\n</svg>\n);\n\nexport default Spinner;\n","// import { CALL_API, Schemas } from '../middleware/api';\nimport { CALL_API } from '../middleware/api';\nimport { \n  GET_CITIES,\n  ADD_CITY,\n  FORECAST_REQUEST,\n  FORECAST_SUCCESS,\n  FORECAST_FAILURE,\n  GEOLOCATION_REQUEST,\n  GEOLOCATION_SUCCESS,\n  GEOLOCATION_FAILURE,\n  SEARCH_LOCATION_REQUEST,\n  SEARCH_LOCATION_SUCCESS,\n  SEARCH_LOCATION_FAILURE\n   } from '../constants/action-types';\n\n// Fetch by city id\nconst fetchForecastByCityId = (cityId) => ({\n  [CALL_API]: {\n    types: [ FORECAST_REQUEST, FORECAST_SUCCESS, FORECAST_FAILURE ],\n    endpoint: `forecast?id=${cityId}`,\n    method: 'GET'\n  },\n  cityId: cityId\n});\n\nexport const getForecastByCityId = (cityId) => (dispatch) => {\n  return dispatch(fetchForecastByCityId(cityId));\n}\n\n// Fetch by Lat Lon\nconst fetchForecastByLatLon = (lat, lon) => ({\n  [CALL_API]: {\n    types: [ FORECAST_REQUEST, FORECAST_SUCCESS, FORECAST_FAILURE ],\n    endpoint: `forecast?lat=${lat}&lon=${lon}`,\n    method: 'GET'\n  }\n});\n\nexport const getForecastByLatLon = (lat, lon) => (dispatch) => {\n  return dispatch(fetchForecastByLatLon(lat, lon));\n}\n\n// Search by Lat Lon\nconst fetchSearchLocationByLatLon = (lat, lon) => ({\n  [CALL_API]: {\n    types: [ SEARCH_LOCATION_REQUEST, SEARCH_LOCATION_SUCCESS, SEARCH_LOCATION_FAILURE ],\n    endpoint: `forecast?lat=${lat}&lon=${lon}`,\n    method: 'GET'\n  }\n});\n\nexport const searchLocationByLatLon = (lat, lon) => (dispatch) => {\n  return dispatch(fetchSearchLocationByLatLon(lat, lon));\n}\n\n\n\n// Fetch cities\nexport const getCities = () => (dispatch) => {\n  return dispatch({type:GET_CITIES});\n}\n\n// Add city\nexport const addCity = (payload) => (dispatch) => {\n    return dispatch({\n      type:ADD_CITY,\n      payload\n    });\n}\n\n// Geolocation\nexport const getGeolocation = () => (dispatch) => {\n\n  const geolocation = navigator.geolocation;\n\n  dispatch({\n    type: GEOLOCATION_REQUEST\n  });\n \n\n  const getPosition = () => {\n    return new Promise((resolve, reject) => {\n      geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n\n  getPosition().then((position) => {\n    dispatch({\n      type: GEOLOCATION_SUCCESS,\n      position\n    })\n  })\n  .catch((err) => {\n    dispatch({\n      type: GEOLOCATION_FAILURE,\n      err\n    });\n  })\n\n  return getPosition();\n\n}\n","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport { Current, Spinner, DaysForecast } from '../components';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DEFAULT_CITY } from '../constants/config';\nimport {\n  getCities,\n  addCity,\n  getForecastByCityId,\n  getGeolocation,\n  searchLocationByLatLon\n} from '../actions';\n\nclass CitiesPage extends Component {\n  static propTypes = {\n    cities: PropTypes.object.isRequired,\n  }\n\n  componentDidMount() {\n\n    this.getForecastByLocation();\n\n  }\n\n  getDefualtCityForecast() {\n    this.props.getForecastByCityId(DEFAULT_CITY.id).then((data) => {\n      this.addCity(data.response.city.id, data.response.city.name, data.response.city.country, data.response.list);\n    })\n  }\n\n  getForecastByLocation () {\n    this.props.getGeolocation().then((data) => {\n      if (data.coords) {\n        this.props.searchLocationByLatLon(data.coords.latitude, data.coords.longitude).then((data) => {\n          this.addCity(data.response.city.id, data.response.city.name, data.response.city.country, data.response.list);\n        })\n        .catch((err) => {\n          console.warn(err);\n        })\n      }\n    })\n    .catch((err) => {\n      this.getDefualtCityForecast();\n    });\n  }\n\n  addCity(cityId, cityName, country, forecast) {\n    const city = {id: cityId, name:cityName, country:country, forecast: forecast};\n    this.props.addCity(city);\n  }\n\n  getCurrentCity() {\n    const { cities } = this.props;\n    return cities.items.filter(city => city.selected)[0];\n  }\n\n  render() {\n        const currentCity = this.getCurrentCity();\n        return (\n          <>\n            {!currentCity && <Spinner />}\n            {currentCity && <Current city={currentCity} />}\n            {currentCity && <DaysForecast days={currentCity.forecast} />}\n          </>\n        );\n  }\n};\n\nconst mapDispatchToProps = {\n  getCities,\n  addCity,\n  getForecastByCityId,\n  getGeolocation,\n  searchLocationByLatLon\n};\n\nconst mapStateToProps = (state) => ({\n  cities : state.cities,\n  geolocation: state.geolocation\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )(CitiesPage));\n","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport { Spinner, Forecast } from '../components';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DEFAULT_CITY } from '../constants/config';\nimport format from 'date-fns/format';\nimport { unixToDate } from '../utils/';\nimport {\n  addCity,\n  getForecastByCityId,\n  getGeolocation,\n  searchLocationByLatLon\n} from '../actions';\n\nclass DayPage extends Component {\n  static propTypes = {\n    cities: PropTypes.object.isRequired,\n  }\n\n  componentDidMount() {\n\n    this.getForecastByLocation();\n\n  }\n\n  componentDidUpdate() {\n    this.getCurrentDay();\n  }\n\n  getDefualtCityForecast() {\n    this.props.getForecastByCityId(DEFAULT_CITY.id).then((data) => {\n      this.addCity(data.response.city.id, data.response.city.name, data.response.city.country, data.response.list);\n    })\n  }\n\n  getForecastByLocation () {\n    this.props.getGeolocation().then((data) => {\n      if (data.coords) {\n        this.props.searchLocationByLatLon(data.coords.latitude, data.coords.longitude).then((data) => {\n          this.addCity(data.response.city.id, data.response.city.name,data.response.city.country, data.response.list);\n        })\n        .catch((err) => {\n          console.warn(err);\n        })\n      }\n    })\n    .catch((err) => {\n      this.getDefualtCityForecast();\n    });\n  }\n\n  addCity(cityId, cityName, country, forecast) {\n    this.props.addCity({id: cityId, name:cityName, country:country, forecast: forecast});\n  }\n\n  getCurrentCity() {\n    const { cities } = this.props;\n    return cities.items.filter(city => city.selected)[0];\n  }\n\n  getCurrentDay() {\n    const arr = this.getCurrentCity();\n    const { match } = this.props;\n    if (arr) {\n      const filtered = arr.forecast.filter(item => {\n        return item.dtTxt.startsWith(match.params.dayId)\n      });\n\n      return filtered;\n    }\n\n    return false;\n  }\n\n  goBack = () => {\n    this.props.history.goBack();\n  }\n\n  render() {\n        const currentDay = this.getCurrentDay();\n        const currentCity = this.getCurrentCity();\n        \n        if (!currentCity || ! currentDay) {\n          return <Spinner />;\n        }\n\n        const date = format( unixToDate(currentDay[0].dt), 'dddd, D MMMM' );\n\n        const backLink = <button className=\"u-margin-top--l t-size--small\" onClick={this.goBack}>Back</button>;\n\n        return (\n          <>\n            <div className=\"u-text--center\">\n              <h1>{currentCity.name} - {currentCity.country}</h1>\n              <h2>{date}</h2>\n            </div>\n            {currentDay && <Forecast day={currentDay} />}\n            {backLink}\n          </>\n        );\n  }\n};\n\nconst mapDispatchToProps = {\n  addCity,\n  getForecastByCityId,\n  getGeolocation,\n  searchLocationByLatLon\n};\n\nconst mapStateToProps = (state) => ({\n  cities : state.cities,\n  geolocation: state.geolocation\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )(DayPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport CitiesPage from './CitiesPage';\nimport DayPage from './DayPage';\n\nconst supportsHistory = 'pushState' in window.history;\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <BrowserRouter basename={'/weather-forecast-test'} forceRefresh={!supportsHistory}>\n    <div className=\"flexgrid flexgrid-full flexgrid--center flexgrid--middle flexgrid--column u-height--full container\">\n      <Switch>\n        <Route exact path={`/`} component={CitiesPage} />\n        <Route path={`/:dayId`} component={DayPage} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  </Provider>\n);\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n};\n\nexport default Root;","import { \n  GEOLOCATION_REQUEST,\n  GEOLOCATION_SUCCESS,\n  GEOLOCATION_FAILURE\n} from '../constants/action-types';\n\nconst initialState = {\n  isLoading: false,\n  position: {},\n  error: false\n};\n\nconst geolocation = (state = initialState, action) => {\n  switch (action.type) {\n    case GEOLOCATION_REQUEST:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case GEOLOCATION_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        position: action.position\n      }\n    case GEOLOCATION_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error\n      }\n    default:\n      return state\n  }\n}\n\nexport default geolocation;","import {\n  GET_CITIES,\n  ADD_CITY,\n  FORECAST_REQUEST,\n  FORECAST_SUCCESS,\n  FORECAST_FAILURE  \n} from '../constants/action-types';\n\nimport { findObjIndex } from '../utils/';\n\nconst initialState = {\n  isLoading: true,\n  items:[]\n};\n\nconst cities = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CITY:\n      return {\n        ...state,\n        items: [\n          ...state.items,\n          {\n            id: parseInt(action.payload.id),\n            name: action.payload.name,\n            country: action.payload.country,\n            selected: true,\n            forecast: action.payload.forecast\n          }\n        ]\n      }\n    case GET_CITIES:\n      return {\n        isLoading: false,\n        ...state\n      }\n    case FORECAST_REQUEST:\n      return state\n    case FORECAST_SUCCESS:\n      state.items[findObjIndex(state.items, 'id', action.response.city.id)] = {\n        ...state.items[0],\n        forecast: action.response.list\n      }\n      return {\n          ...state\n      }\n    case FORECAST_FAILURE:\n      return state\n    default:\n      return state\n  }\n}\n\nexport default cities;","import { combineReducers } from 'redux';\nimport geolocation from './geolocation';\nimport cities from './cities';\n\nexport default combineReducers({\n  cities,\n  geolocation\n})","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport api from '../middleware/api';\nimport rootReducer from '../reducers';\n\nconst configureStore = preloadedState => createStore(\n  rootReducer,\n  preloadedState,\n  applyMiddleware(thunk, api)\n);\n\nexport default configureStore;"],"sourceRoot":""}